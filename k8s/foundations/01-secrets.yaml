# All Required Secrets - MUST be created before deploying services
# NOTE: Replace all placeholder values with actual credentials

---
# PostgreSQL Primary Database Secret
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: link-services
type: Opaque
stringData:
  database: "linkdb"
  username: "linkuser"
  password: "REPLACE_WITH_SECURE_PASSWORD"
  replication-username: "replicator"
  replication-password: "REPLACE_WITH_REPLICATION_PASSWORD"
  # Connection string for monitoring
  replica-connection-string: "postgresql://linkuser:REPLACE_WITH_SECURE_PASSWORD@postgres-replica:5432/linkdb?sslmode=require"

---
# PostgreSQL Backup Credentials Secret
apiVersion: v1
kind: Secret
metadata:
  name: postgres-backup-secret
  namespace: link-services
type: Opaque
stringData:
  postgres-user: "linkuser"
  postgres-password: "REPLACE_WITH_SECURE_PASSWORD"
  s3-bucket: "REPLACE_WITH_S3_BUCKET_NAME"
  encryption-key: "REPLACE_WITH_32_CHAR_ENCRYPTION_KEY"
  aws-access-key-id: "REPLACE_WITH_AWS_ACCESS_KEY"
  aws-secret-access-key: "REPLACE_WITH_AWS_SECRET_KEY"

---
# Redis Authentication Secret
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: link-services
type: Opaque
stringData:
  password: "REPLACE_WITH_REDIS_PASSWORD"
  sentinel-password: "REPLACE_WITH_SENTINEL_PASSWORD"
  slack-webhook-url: "REPLACE_WITH_SLACK_WEBHOOK_URL"  # Optional

---
# Redis Backup Credentials Secret
apiVersion: v1
kind: Secret
metadata:
  name: redis-backup-secret
  namespace: link-services
type: Opaque
stringData:
  redis-password: "REPLACE_WITH_REDIS_PASSWORD"
  s3-bucket: "REPLACE_WITH_S3_BUCKET_NAME"
  encryption-key: "REPLACE_WITH_32_CHAR_ENCRYPTION_KEY"
  aws-access-key-id: "REPLACE_WITH_AWS_ACCESS_KEY"
  aws-secret-access-key: "REPLACE_WITH_AWS_SECRET_KEY"

---
# Qdrant Backup Credentials Secret
apiVersion: v1
kind: Secret
metadata:
  name: qdrant-backup-secret
  namespace: link-services
type: Opaque
stringData:
  s3-bucket: "REPLACE_WITH_S3_BUCKET_NAME"
  aws-access-key-id: "REPLACE_WITH_AWS_ACCESS_KEY"
  aws-secret-access-key: "REPLACE_WITH_AWS_SECRET_KEY"

---
# Data Encryption Secret for field-level encryption
apiVersion: v1
kind: Secret
metadata:
  name: data-encryption-secret
  namespace: link-services
type: Opaque
stringData:
  data-encryption-key: "REPLACE_WITH_32_CHAR_DATA_ENCRYPTION_KEY"