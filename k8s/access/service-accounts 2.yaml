# Link Platform - ServiceAccount Configuration
# 
# This file defines ServiceAccounts for each microservice to enable
# Linkerd mTLS-based service authentication, replacing JWT tokens
# 
# Each service gets its own identity for zero-trust networking

---
# API Gateway ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: link-api-gateway-sa
  namespace: link-services
  labels:
    app: api-gateway
    component: gateway
    app.kubernetes.io/part-of: link-platform
  annotations:
    # AWS IAM role for external secrets (if needed)
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/link-api-gateway-role
automountServiceAccountToken: true

---
# User Service ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: link-user-service-sa
  namespace: link-services
  labels:
    app: user-svc
    component: backend
    app.kubernetes.io/part-of: link-platform
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/link-user-service-role
automountServiceAccountToken: true

---
# Chat Service ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: link-chat-service-sa
  namespace: link-services
  labels:
    app: chat-svc
    component: backend
    app.kubernetes.io/part-of: link-platform
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/link-chat-service-role
automountServiceAccountToken: true

---
# AI Service ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: link-ai-service-sa
  namespace: link-services
  labels:
    app: ai-svc
    component: backend
    app.kubernetes.io/part-of: link-platform
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/link-ai-service-role
automountServiceAccountToken: true

---
# Discovery Service ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: link-discovery-service-sa
  namespace: link-services
  labels:
    app: discovery-svc
    component: backend
    app.kubernetes.io/part-of: link-platform
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/link-discovery-service-role
automountServiceAccountToken: true

---
# Search Service ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: link-search-service-sa
  namespace: link-services
  labels:
    app: search-svc
    component: backend
    app.kubernetes.io/part-of: link-platform
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/link-search-service-role
automountServiceAccountToken: true

---
# Feature Service ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: link-feature-service-sa
  namespace: link-services
  labels:
    app: feature-svc
    component: backend
    app.kubernetes.io/part-of: link-platform
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/link-feature-service-role
automountServiceAccountToken: true

---
# Service-to-Service Communication Role
# This role allows services to communicate with each other
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: link-service-communication-role
  namespace: link-services
  labels:
    app.kubernetes.io/part-of: link-platform
    access-type: service
rules:
# Allow services to read other service endpoints for discovery
- apiGroups: [""]
  resources: ["endpoints", "services"]
  verbs: ["get", "list"]
# Allow reading ConfigMaps for service configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
# Allow reading Secrets that belong to the same service
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: 
    - "user-service-db-secret"
    - "chat-service-db-secret" 
    - "ai-service-db-secret"
    - "discovery-service-db-secret"
    - "search-service-db-secret"
    - "feature-service-db-secret"
    - "api-gateway-config-secret"
  verbs: ["get"]

---
# API Gateway RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: link-api-gateway-binding
  namespace: link-services
  labels:
    app.kubernetes.io/part-of: link-platform
subjects:
- kind: ServiceAccount
  name: link-api-gateway-sa
  namespace: link-services
roleRef:
  kind: Role
  name: link-service-communication-role
  apiGroup: rbac.authorization.k8s.io

---
# User Service RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: link-user-service-binding
  namespace: link-services
  labels:
    app.kubernetes.io/part-of: link-platform
subjects:
- kind: ServiceAccount
  name: link-user-service-sa
  namespace: link-services
roleRef:
  kind: Role
  name: link-service-communication-role
  apiGroup: rbac.authorization.k8s.io

---
# Chat Service RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: link-chat-service-binding
  namespace: link-services
  labels:
    app.kubernetes.io/part-of: link-platform
subjects:
- kind: ServiceAccount
  name: link-chat-service-sa
  namespace: link-services
roleRef:
  kind: Role
  name: link-service-communication-role
  apiGroup: rbac.authorization.k8s.io

---
# AI Service RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: link-ai-service-binding
  namespace: link-services
  labels:
    app.kubernetes.io/part-of: link-platform
subjects:
- kind: ServiceAccount
  name: link-ai-service-sa
  namespace: link-services
roleRef:
  kind: Role
  name: link-service-communication-role
  apiGroup: rbac.authorization.k8s.io

---
# Discovery Service RoleBinding  
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: link-discovery-service-binding
  namespace: link-services
  labels:
    app.kubernetes.io/part-of: link-platform
subjects:
- kind: ServiceAccount
  name: link-discovery-service-sa
  namespace: link-services
roleRef:
  kind: Role
  name: link-service-communication-role
  apiGroup: rbac.authorization.k8s.io

---
# Search Service RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: link-search-service-binding
  namespace: link-services
  labels:
    app.kubernetes.io/part-of: link-platform
subjects:
- kind: ServiceAccount
  name: link-search-service-sa
  namespace: link-services
roleRef:
  kind: Role
  name: link-service-communication-role
  apiGroup: rbac.authorization.k8s.io

---
# Feature Service RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: link-feature-service-binding
  namespace: link-services
  labels:
    app.kubernetes.io/part-of: link-platform
subjects:
- kind: ServiceAccount
  name: link-feature-service-sa
  namespace: link-services
roleRef:
  kind: Role
  name: link-service-communication-role
  apiGroup: rbac.authorization.k8s.io