# =================================================================
# Link Application - Production Environment Variables
# =================================================================
# Copy this file to .env.production and fill in your actual values
# IMPORTANT: Add these same values to GitHub Secrets for CI/CD

# 🔑 **Authentication Secrets**
# JWT secret shared across api-gateway, user-svc, and chat-svc
JWT_SECRET=your_super_secure_jwt_secret_at_least_64_characters_long_here
# Service-to-service authentication token
SERVICE_AUTH_TOKEN=your_service_to_service_auth_secret_at_least_32_chars

# 🗄️ **Main Database Configuration**
# Primary PostgreSQL configuration (used by Terraform)
POSTGRES_HOST=postgres.yourdomain.com
POSTGRES_USER=link_production_user
POSTGRES_PASSWORD=your_very_secure_postgres_password_here
DB_NAME=link_production

# 🔄 **Service Database Passwords** (Auto-generated by Terraform)
# These are generated by Terraform but can be set manually if needed
USER_SERVICE_DB_PASSWORD=auto-generated-by-terraform
CHAT_SERVICE_DB_PASSWORD=auto-generated-by-terraform
AI_SERVICE_DB_PASSWORD=auto-generated-by-terraform
DISCOVERY_SERVICE_DB_PASSWORD=auto-generated-by-terraform
SEARCH_SERVICE_DB_PASSWORD=auto-generated-by-terraform
LOCATION_SERVICE_DB_PASSWORD=auto-generated-by-terraform
STORIES_SERVICE_DB_PASSWORD=auto-generated-by-terraform
OPPORTUNITIES_SERVICE_DB_PASSWORD=auto-generated-by-terraform

# 🔴 **Redis Configuration**
REDIS_HOST=redis.yourdomain.com
REDIS_PORT=6379
REDIS_PASSWORD=your_very_secure_redis_password_here

# 🤖 **Third-Party API Keys**
OPENAI_API_KEY=sk-proj-your-openai-api-key-here

# SSL/TLS Configuration
ACME_EMAIL=your_email@domain.com
CLOUDFLARE_EMAIL=your_cloudflare_email@domain.com
CLOUDFLARE_DNS_API_TOKEN=your_cloudflare_api_token_here

# Domain Configuration
DOMAIN_NAME=yourdomain.com
CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# Frontend Environment (set in your deployment platform)
# VITE_API_BASE_URL=https://api.yourdomain.com
# VITE_SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# VITE_APP_VERSION=1.0.0

# Backend Observability
SENTRY_DSN=https://your-backend-sentry-dsn@sentry.io/project-id
APP_VERSION=1.0.0

# 📊 **Monitoring & Observability**
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=your_secure_grafana_password
PGBOUNCER_ADMIN_PASSWORD=your_secure_pgbouncer_admin_password
PGBOUNCER_STATS_PASSWORD=your_secure_pgbouncer_stats_password

# ☁️ **Cloud Provider Secrets** (For Terraform S3 backend)
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key

# =================================================================
# GitHub Secrets Setup Instructions
# =================================================================
# Add these EXACT secret names to GitHub → Settings → Secrets → Actions:
#
# 🔑 Authentication:
#   JWT_SECRET
#   SERVICE_AUTH_TOKEN
#
# 🗄️ Database:
#   POSTGRES_HOST
#   POSTGRES_USER  
#   POSTGRES_PASSWORD
#   DB_NAME
#   REDIS_PASSWORD
#
# 🤖 External APIs:
#   OPENAI_API_KEY
#
# 📊 Monitoring:
#   GRAFANA_ADMIN_PASSWORD
#   PGBOUNCER_ADMIN_PASSWORD
#   PGBOUNCER_STATS_PASSWORD
#
# ☁️ Cloud (Future):
#   AWS_ACCESS_KEY_ID
#   AWS_SECRET_ACCESS_KEY
#
# =================================================================
# Quick Secret Generation (run locally, then add to GitHub):
# =================================================================
#
# echo "JWT_SECRET=$(openssl rand -base64 64)" >> secrets.txt
# echo "SERVICE_AUTH_TOKEN=$(openssl rand -base64 32)" >> secrets.txt
# echo "POSTGRES_PASSWORD=$(openssl rand -base64 24)" >> secrets.txt
# echo "REDIS_PASSWORD=$(openssl rand -base64 24)" >> secrets.txt
# echo "GRAFANA_ADMIN_PASSWORD=$(openssl rand -base64 16)" >> secrets.txt
# echo "PGBOUNCER_ADMIN_PASSWORD=$(openssl rand -base64 16)" >> secrets.txt
# echo "PGBOUNCER_STATS_PASSWORD=$(openssl rand -base64 16)" >> secrets.txt
#
# cat secrets.txt  # Review, then manually add to GitHub
# rm secrets.txt   # Delete after adding to GitHub
# =================================================================
