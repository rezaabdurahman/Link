# Traefik dynamic configuration for security hardening

http:
  middlewares:
    # Security headers middleware
    security-headers:
      headers:
        # Security headers
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsSeconds: 31536000
        stsIncludeSubdomains: true
        stsPreload: true
        
        # Custom security headers
        customRequestHeaders:
          X-Forwarded-Proto: https
        customResponseHeaders:
          # Content Security Policy
          Content-Security-Policy: >-
            default-src 'self';
            script-src 'self' 'unsafe-inline';
            style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
            font-src 'self' https://fonts.gstatic.com;
            img-src 'self' data: https:;
            connect-src 'self';
            object-src 'none';
            base-uri 'self';
            form-action 'self';
            frame-ancestors 'none';
          
          # Additional security headers
          X-Content-Type-Options: nosniff
          X-Frame-Options: DENY
          X-XSS-Protection: "1; mode=block"
          Referrer-Policy: strict-origin-when-cross-origin
          Permissions-Policy: >-
            accelerometer=(),
            camera=(),
            geolocation=(self),
            gyroscope=(),
            magnetometer=(),
            microphone=(),
            payment=(),
            usb=()

    # Rate limiting middleware
    rate-limit:
      rateLimit:
        burst: 50
        period: 1m
        average: 10
        
    # CORS middleware (if needed for API)
    cors:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
          - POST
          - DELETE
          - PATCH
        accessControlAllowOriginList:
          - https://your-frontend-domain.com
        accessControlAllowHeaders:
          - Content-Type
          - Authorization
          - X-CSRF-Token
        accessControlAllowCredentials: true
        accessControlMaxAge: 86400
        addVaryHeader: true

    # Basic auth for admin endpoints (if needed)
    admin-auth:
      basicAuth:
        users:
          - "admin:$2y$10$your-hashed-password-here"

tls:
  options:
    # Modern TLS configuration (recommended for new applications)
    modern:
      minVersion: "VersionTLS13"
      cipherSuites:
        - "TLS_AES_256_GCM_SHA384"
        - "TLS_CHACHA20_POLY1305_SHA256"
        - "TLS_AES_128_GCM_SHA256"
      curvePreferences:
        - "X25519"
        - "secp256r1"
      sniStrict: true
      
    # Intermediate TLS configuration (for broader compatibility)
    intermediate:
      minVersion: "VersionTLS12"
      cipherSuites:
        - "TLS_AES_256_GCM_SHA384"
        - "TLS_CHACHA20_POLY1305_SHA256"
        - "TLS_AES_128_GCM_SHA256"
        - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
      curvePreferences:
        - "X25519"
        - "secp256r1"
        - "secp384r1"
      sniStrict: true

# Certificate stores for client certificates (mTLS)
tls:
  stores:
    default:
      defaultCertificate:
        certFile: /etc/ssl/certs/default.crt
        keyFile: /etc/ssl/private/default.key
