export interface User {
  id: string;
  name: string;
  age: number;
  profilePicture: string;
  bio: string;
  interests: string[];
  location: {
    lat: number;
    lng: number;
    proximityKm: number;
  };
  isAvailable: boolean;
  mutualFriends: string[];
  connectionPriority: 'close' | 'want-closer' | 'regular';
  lastSeen: Date;
}

export interface Message {
  id: string;
  senderId: string;
  receiverId: string;
  content: string;
  timestamp: Date;
  type: 'text' | 'system' | 'context-card';
  contextCard?: ContextCard;
}

export interface ContextCard {
  type: 'conversation-starter' | 'event-suggestion' | 'connection-expander';
  title: string;
  description: string;
  actionText?: string;
}

export interface Chat {
  id: string;
  participantId: string;
  participantName: string;
  participantAvatar: string;
  lastMessage: Message;
  unreadCount: number;
  conversationSummary: string;
  priority: number;
  messages?: Message[];
}

export interface Story {
  id: string;
  userId: string;
  content: string;
  media?: string[];
  timestamp: Date;
  viewers: string[];
}

export interface FriendProfile {
  userId: string;
  publicProfile: User;
  privateNotes: string;
  autoGeneratedProfile: {
    keyMoments: string[];
    preferences: string[];
    lastConversations: string[];
    milestones: string[];
  };
  unknownAboutYou: string[];
  unknownAboutThem: string[];
}

export interface Opportunity {
  id: string;
  type: 'reminder' | 'group-pairing' | 'ai-suggestion' | 'seasonal';
  title: string;
  description: string;
  suggestedFriends: string[];
  activityType: 'grocery' | 'lunch' | 'walk' | 'event' | 'other';
  dueDate?: Date;
  location?: string;
}
