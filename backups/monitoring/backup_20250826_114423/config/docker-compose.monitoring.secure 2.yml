version: '3.8'

services:
  # Reverse Proxy with Authentication
  monitoring-proxy:
    image: nginx:alpine
    container_name: link_monitoring_proxy
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./monitoring/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./monitoring/nginx/htpasswd:/etc/nginx/.htpasswd:ro
      - ./monitoring/ssl:/etc/ssl/certs:ro
    networks:
      - monitoring
    depends_on:
      - grafana
      - prometheus
      - jaeger

  # Prometheus - Metrics collection (No direct external access)
  prometheus:
    image: prom/prometheus:latest
    container_name: link_prometheus
    restart: unless-stopped
    # ✅ SECURE: No direct port exposure
    expose:
      - "9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'  # ✅ SECURE: Reduced retention
      - '--web.enable-lifecycle'
      # ✅ SECURE: Disable admin API in production
      # - '--web.enable-admin-api'
    networks:
      - monitoring
    user: "nobody:nobody"  # ✅ SECURE: Non-root user
    read_only: true  # ✅ SECURE: Read-only filesystem
    tmpfs:
      - /tmp

  # Grafana - Visualization (Secure configuration)
  grafana:
    image: grafana/grafana:latest
    container_name: link_grafana
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      # ✅ SECURE: Strong password from secrets
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_admin_password
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      # ✅ SECURE: Security hardening
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SECURITY_COOKIE_SAMESITE=strict
      - GF_SECURITY_STRICT_TRANSPORT_SECURITY=true
      - GF_SERVER_PROTOCOL=https
      - GF_SERVER_CERT_FILE=/etc/ssl/certs/grafana.crt
      - GF_SERVER_CERT_KEY=/etc/ssl/private/grafana.key
      # ✅ SECURE: Disable unnecessary features
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SNAPSHOTS_EXTERNAL_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./monitoring/ssl:/etc/ssl:ro
    secrets:
      - grafana_admin_password
    networks:
      - monitoring
    depends_on:
      - prometheus
    user: "472:472"  # ✅ SECURE: Grafana user

  # Jaeger - Distributed tracing (Secure configuration) 
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: link_jaeger
    restart: unless-stopped
    expose:
      - "16686"
      - "4317"
      - "4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      # ✅ SECURE: Data retention limits
      - SPAN_STORAGE_TYPE=memory
      - MEMORY_MAX_TRACES=10000
      # ✅ SECURE: Auth required for queries
      - QUERY_BASE_PATH=/jaeger
    networks:
      - monitoring
      - link-network
    volumes:
      - jaeger_data:/tmp
    # ✅ SECURE: Resource limits
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: '0.5'

  # Node Exporter - System metrics (Secure configuration)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: link_node_exporter
    restart: unless-stopped
    expose:
      - "9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      # ✅ SECURE: Minimal host access
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      # ✅ SECURE: Disable potentially sensitive collectors
      - '--no-collector.hwmon'
    networks:
      - monitoring
    read_only: true  # ✅ SECURE: Read-only filesystem

  # AlertManager - Alert handling (Secure configuration)
  alertmanager:
    image: prom/alertmanager:latest
    container_name: link_alertmanager
    restart: unless-stopped
    expose:
      - "9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--data.retention=72h'  # ✅ SECURE: Limited retention
    networks:
      - monitoring
    depends_on:
      - prometheus
    user: "nobody:nobody"  # ✅ SECURE: Non-root user

  # Redis Exporter (Secure configuration)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: link_redis_exporter
    restart: unless-stopped
    expose:
      - "9121"
    environment:
      # ✅ SECURE: Use secrets for connection strings
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
    secrets:
      - redis_password
    networks:
      - monitoring
      - link-network
    depends_on:
      - redis
    user: "59000:59000"  # ✅ SECURE: Non-root user

  # Postgres Exporter (Secure configuration)
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: link_postgres_exporter
    restart: unless-stopped
    expose:
      - "9187"
    environment:
      # ✅ SECURE: Use secrets for database credentials
      - DATA_SOURCE_NAME_FILE=/run/secrets/postgres_exporter_dsn
    secrets:
      - postgres_exporter_dsn
    networks:
      - monitoring
      - link-network
    depends_on:
      - postgres
    user: "70000:70000"  # ✅ SECURE: Non-root user

  # Blackbox Exporter (Secure configuration)
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: link_blackbox_exporter
    restart: unless-stopped
    expose:
      - "9115"
    volumes:
      - ./monitoring/blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    networks:
      - monitoring
      - link-network
    user: "nobody:nobody"  # ✅ SECURE: Non-root user

# ✅ SECURE: Secrets management
secrets:
  grafana_admin_password:
    file: ./monitoring/secrets/grafana_admin_password.txt
  redis_password:
    file: ./monitoring/secrets/redis_password.txt
  postgres_exporter_dsn:
    file: ./monitoring/secrets/postgres_exporter_dsn.txt

networks:
  monitoring:
    name: link_monitoring_secure
    driver: bridge
    # ✅ SECURE: Network isolation
    internal: true  # No external access
  link-network:
    external: true

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  jaeger_data:
    driver: local
