# Link Backend Services - Environment Template
# Copy and customize for each environment:
# - .env (local development, gitignored)
# - .env.test (testing)
# - .env.staging (staging deployment)
# - .env.production (production deployment)

# =============================================================================
# REQUIRED VARIABLES - Must be set in all environments
# =============================================================================

# Application Environment
# Values: development | test | staging | production | demo
APP_ENV=development

# Application Version
APP_VERSION=1.0.0-dev

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database connection details
# local: localhost | staging/production: actual DB hosts
DB_HOST=localhost
DB_PORT=5432
DB_USER=linkuser
DB_PASSWORD=CHANGE_THIS_IN_PRODUCTION
DB_NAME=linkdb
DB_SSL_MODE=disable

# Database pool configuration
DB_MAX_CONNECTIONS=25
DB_IDLE_TIMEOUT=5m
DB_CONN_LIFETIME=1h

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis connection details
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=CHANGE_THIS_IN_PRODUCTION
REDIS_DB=0
REDIS_TTL=3600

# Redis pool configuration
REDIS_MAX_CONNECTIONS=10
REDIS_IDLE_TIMEOUT=300s

# =============================================================================
# JWT CONFIGURATION
# =============================================================================

# JWT secret key (MUST be 32+ characters in production)
JWT_SECRET=CHANGE_THIS_IN_PRODUCTION_32_CHARS_MINIMUM
JWT_EXPIRATION=24h
JWT_ISSUER=link-backend-service

# Service-specific JWT configuration
JWT_ACCESS_TOKEN_EXPIRY=15m
JWT_REFRESH_TOKEN_EXPIRY=7d

# =============================================================================
# SERVICE URLS
# =============================================================================

# Internal service communication URLs
# local: localhost with different ports
# staging/production: actual service endpoints
USER_SVC_URL=http://localhost:8001
CHAT_SVC_URL=http://localhost:8002
AI_SVC_URL=http://localhost:8003
DISCOVERY_SVC_URL=http://localhost:8004
SEARCH_SVC_URL=http://localhost:8005
FEATURE_SVC_URL=http://localhost:8006

# =============================================================================
# EXTERNAL API CONFIGURATION
# =============================================================================

# OpenAI API configuration
OPENAI_API_KEY=CHANGE_THIS_IN_PRODUCTION
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=1000
OPENAI_TEMPERATURE=0.7

# =============================================================================
# AWS CONFIGURATION
# =============================================================================

# AWS region and KMS configuration
AWS_REGION=us-west-2
AWS_KMS_KEY_ID=alias/link-app-pii-encryption
KMS_CACHE_TTL_MINUTES=60

# AWS credentials (use IAM roles in production, not access keys)
# AWS_ACCESS_KEY_ID=use-iam-roles-in-production
# AWS_SECRET_ACCESS_KEY=use-iam-roles-in-production

# LocalStack endpoint for local development
# AWS_KMS_ENDPOINT=http://localhost:4566

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level and format
# local: debug/text | staging/production: info/json
LOG_LEVEL=info
LOG_FORMAT=json

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Sentry configuration for error tracking
SENTRY_DSN=CHANGE_THIS_IN_PRODUCTION
SENTRY_ENVIRONMENT=development

# Tracing and metrics
ENABLE_TRACING=true
ENABLE_METRICS=true
JAEGER_ENDPOINT=http://localhost:14268/api/traces

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Service authentication token
SERVICE_AUTH_TOKEN=CHANGE_THIS_IN_PRODUCTION

# Password hashing configuration
BCRYPT_COST=12
ARGON2_TIME=3
ARGON2_MEMORY=65536
ARGON2_THREADS=4
ARGON2_KEYLEN=32
PASSWORD_HASH_ALGO=bcrypt

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Debug and development features
# local: true | staging: false | production: false
ENABLE_DEBUG_ENDPOINTS=false
ENABLE_PPROF=false

# Security features
ENABLE_PII_ENCRYPTION=true
ENABLE_AUDIT_LOG=true
ENABLE_RATE_LIMITING=true

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# HTTP server configuration
APP_PORT=8080
READ_TIMEOUT=30s
WRITE_TIMEOUT=30s
IDLE_TIMEOUT=60s

# Circuit breaker configuration
CIRCUIT_BREAKER_TIMEOUT=5s
CIRCUIT_BREAKER_MAX_REQUESTS=10
CIRCUIT_BREAKER_INTERVAL=30s

# =============================================================================
# SERVICE-SPECIFIC CONFIGURATION
# =============================================================================

# WebSocket configuration (chat-svc)
WS_READ_BUFFER_SIZE=1024
WS_WRITE_BUFFER_SIZE=1024
WS_PING_PERIOD=54s
WS_PONG_WAIT=60s

# Search configuration (search-svc)
QDRANT_URL=http://localhost:6333
QDRANT_COLLECTION_NAME=users
EMBEDDING_DIMENSION=1536

# Discovery configuration (discovery-svc)
MAX_DISTANCE_KM=50
DEFAULT_RADIUS_KM=5
MAX_USERS_PER_REQUEST=50

# Feature flags configuration (feature-svc)
DEFAULT_CACHE_TTL=5m
MAX_FLAGS_PER_USER=1000
AUDIT_LOG_RETENTION_DAYS=90

# =============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# =============================================================================

# Example .env (local development):
# APP_ENV=development
# LOG_LEVEL=debug
# LOG_FORMAT=text
# ENABLE_DEBUG_ENDPOINTS=true
# DB_SSL_MODE=disable
# JWT_SECRET=local-dev-secret-32-chars-minimum
# REDIS_PASSWORD=

# Example .env.production:
# APP_ENV=production
# LOG_LEVEL=info
# LOG_FORMAT=json
# ENABLE_DEBUG_ENDPOINTS=false
# DB_SSL_MODE=require
# JWT_SECRET=USE_K8S_SECRET_OR_AWS_SECRETS_MANAGER
# REDIS_PASSWORD=USE_K8S_SECRET_OR_AWS_SECRETS_MANAGER
# SENTRY_DSN=https://production-dsn@sentry.io/project