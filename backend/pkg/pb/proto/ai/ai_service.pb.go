// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/ai/ai_service.proto

package ai

import (
	common "github.com/link-app/backend/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AI processing consent levels
type ConsentLevel int32

const (
	ConsentLevel_NONE  ConsentLevel = 0
	ConsentLevel_BASIC ConsentLevel = 1
	ConsentLevel_FULL  ConsentLevel = 2
)

// Enum value maps for ConsentLevel.
var (
	ConsentLevel_name = map[int32]string{
		0: "NONE",
		1: "BASIC",
		2: "FULL",
	}
	ConsentLevel_value = map[string]int32{
		"NONE":  0,
		"BASIC": 1,
		"FULL":  2,
	}
)

func (x ConsentLevel) Enum() *ConsentLevel {
	p := new(ConsentLevel)
	*p = x
	return p
}

func (x ConsentLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsentLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ai_ai_service_proto_enumTypes[0].Descriptor()
}

func (ConsentLevel) Type() protoreflect.EnumType {
	return &file_proto_ai_ai_service_proto_enumTypes[0]
}

func (x ConsentLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsentLevel.Descriptor instead.
func (ConsentLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{0}
}

// Sentiment analysis result
type Sentiment int32

const (
	Sentiment_NEUTRAL  Sentiment = 0
	Sentiment_POSITIVE Sentiment = 1
	Sentiment_NEGATIVE Sentiment = 2
	Sentiment_MIXED    Sentiment = 3
)

// Enum value maps for Sentiment.
var (
	Sentiment_name = map[int32]string{
		0: "NEUTRAL",
		1: "POSITIVE",
		2: "NEGATIVE",
		3: "MIXED",
	}
	Sentiment_value = map[string]int32{
		"NEUTRAL":  0,
		"POSITIVE": 1,
		"NEGATIVE": 2,
		"MIXED":    3,
	}
)

func (x Sentiment) Enum() *Sentiment {
	p := new(Sentiment)
	*p = x
	return p
}

func (x Sentiment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sentiment) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ai_ai_service_proto_enumTypes[1].Descriptor()
}

func (Sentiment) Type() protoreflect.EnumType {
	return &file_proto_ai_ai_service_proto_enumTypes[1]
}

func (x Sentiment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sentiment.Descriptor instead.
func (Sentiment) EnumDescriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{1}
}

// Message for AI processing
type AIMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *common.UUID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SenderId      *common.UUID           `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIMessage) Reset() {
	*x = AIMessage{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIMessage) ProtoMessage() {}

func (x *AIMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIMessage.ProtoReflect.Descriptor instead.
func (*AIMessage) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{0}
}

func (x *AIMessage) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AIMessage) GetSenderId() *common.UUID {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *AIMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AIMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AIMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// User consent preferences
type UserConsent struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	UserId                    *common.UUID           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ConversationSummarization ConsentLevel           `protobuf:"varint,2,opt,name=conversation_summarization,json=conversationSummarization,proto3,enum=ai.ConsentLevel" json:"conversation_summarization,omitempty"`
	SentimentAnalysis         ConsentLevel           `protobuf:"varint,3,opt,name=sentiment_analysis,json=sentimentAnalysis,proto3,enum=ai.ConsentLevel" json:"sentiment_analysis,omitempty"`
	ResponseSuggestions       ConsentLevel           `protobuf:"varint,4,opt,name=response_suggestions,json=responseSuggestions,proto3,enum=ai.ConsentLevel" json:"response_suggestions,omitempty"`
	InsightsGeneration        ConsentLevel           `protobuf:"varint,5,opt,name=insights_generation,json=insightsGeneration,proto3,enum=ai.ConsentLevel" json:"insights_generation,omitempty"`
	DataRetentionAllowed      bool                   `protobuf:"varint,6,opt,name=data_retention_allowed,json=dataRetentionAllowed,proto3" json:"data_retention_allowed,omitempty"`
	UpdatedAt                 *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ExpiresAt                 *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UserConsent) Reset() {
	*x = UserConsent{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserConsent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConsent) ProtoMessage() {}

func (x *UserConsent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConsent.ProtoReflect.Descriptor instead.
func (*UserConsent) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{1}
}

func (x *UserConsent) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *UserConsent) GetConversationSummarization() ConsentLevel {
	if x != nil {
		return x.ConversationSummarization
	}
	return ConsentLevel_NONE
}

func (x *UserConsent) GetSentimentAnalysis() ConsentLevel {
	if x != nil {
		return x.SentimentAnalysis
	}
	return ConsentLevel_NONE
}

func (x *UserConsent) GetResponseSuggestions() ConsentLevel {
	if x != nil {
		return x.ResponseSuggestions
	}
	return ConsentLevel_NONE
}

func (x *UserConsent) GetInsightsGeneration() ConsentLevel {
	if x != nil {
		return x.InsightsGeneration
	}
	return ConsentLevel_NONE
}

func (x *UserConsent) GetDataRetentionAllowed() bool {
	if x != nil {
		return x.DataRetentionAllowed
	}
	return false
}

func (x *UserConsent) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserConsent) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Summarization request
type SummarizeConversationRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConversationId   *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Messages         []*AIMessage           `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	RequestingUserId *common.UUID           `protobuf:"bytes,3,opt,name=requesting_user_id,json=requestingUserId,proto3" json:"requesting_user_id,omitempty"`
	MaxSummaryLength int32                  `protobuf:"varint,4,opt,name=max_summary_length,json=maxSummaryLength,proto3" json:"max_summary_length,omitempty"`
	SummaryStyle     string                 `protobuf:"bytes,5,opt,name=summary_style,json=summaryStyle,proto3" json:"summary_style,omitempty"` // "brief", "detailed", "bullet_points"
	FocusTopics      []string               `protobuf:"bytes,6,rep,name=focus_topics,json=focusTopics,proto3" json:"focus_topics,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SummarizeConversationRequest) Reset() {
	*x = SummarizeConversationRequest{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeConversationRequest) ProtoMessage() {}

func (x *SummarizeConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeConversationRequest.ProtoReflect.Descriptor instead.
func (*SummarizeConversationRequest) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{2}
}

func (x *SummarizeConversationRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *SummarizeConversationRequest) GetMessages() []*AIMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *SummarizeConversationRequest) GetRequestingUserId() *common.UUID {
	if x != nil {
		return x.RequestingUserId
	}
	return nil
}

func (x *SummarizeConversationRequest) GetMaxSummaryLength() int32 {
	if x != nil {
		return x.MaxSummaryLength
	}
	return 0
}

func (x *SummarizeConversationRequest) GetSummaryStyle() string {
	if x != nil {
		return x.SummaryStyle
	}
	return ""
}

func (x *SummarizeConversationRequest) GetFocusTopics() []string {
	if x != nil {
		return x.FocusTopics
	}
	return nil
}

type SummarizeConversationResponse struct {
	state                   protoimpl.MessageState  `protogen:"open.v1"`
	Summary                 string                  `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	KeyTopics               []string                `protobuf:"bytes,2,rep,name=key_topics,json=keyTopics,proto3" json:"key_topics,omitempty"`
	Participants            []*Participant          `protobuf:"bytes,3,rep,name=participants,proto3" json:"participants,omitempty"`
	MessageCount            int32                   `protobuf:"varint,4,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	ConversationPeriodStart *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=conversation_period_start,json=conversationPeriodStart,proto3" json:"conversation_period_start,omitempty"`
	ConversationPeriodEnd   *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=conversation_period_end,json=conversationPeriodEnd,proto3" json:"conversation_period_end,omitempty"`
	ConfidenceScore         float32                 `protobuf:"fixed32,7,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	Result                  *common.SuccessResponse `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SummarizeConversationResponse) Reset() {
	*x = SummarizeConversationResponse{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeConversationResponse) ProtoMessage() {}

func (x *SummarizeConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeConversationResponse.ProtoReflect.Descriptor instead.
func (*SummarizeConversationResponse) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{3}
}

func (x *SummarizeConversationResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *SummarizeConversationResponse) GetKeyTopics() []string {
	if x != nil {
		return x.KeyTopics
	}
	return nil
}

func (x *SummarizeConversationResponse) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *SummarizeConversationResponse) GetMessageCount() int32 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *SummarizeConversationResponse) GetConversationPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.ConversationPeriodStart
	}
	return nil
}

func (x *SummarizeConversationResponse) GetConversationPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.ConversationPeriodEnd
	}
	return nil
}

func (x *SummarizeConversationResponse) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *SummarizeConversationResponse) GetResult() *common.SuccessResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type Participant struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            *common.UUID           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Role              string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"` // "active", "observer", "moderator"
	MessageCount      int32                  `protobuf:"varint,3,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	DominantSentiment Sentiment              `protobuf:"varint,4,opt,name=dominant_sentiment,json=dominantSentiment,proto3,enum=ai.Sentiment" json:"dominant_sentiment,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Participant) Reset() {
	*x = Participant{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{4}
}

func (x *Participant) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *Participant) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Participant) GetMessageCount() int32 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *Participant) GetDominantSentiment() Sentiment {
	if x != nil {
		return x.DominantSentiment
	}
	return Sentiment_NEUTRAL
}

// Response suggestions
type GenerateResponseSuggestionsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConversationId   *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	RecentMessages   []*AIMessage           `protobuf:"bytes,2,rep,name=recent_messages,json=recentMessages,proto3" json:"recent_messages,omitempty"`
	RequestingUserId *common.UUID           `protobuf:"bytes,3,opt,name=requesting_user_id,json=requestingUserId,proto3" json:"requesting_user_id,omitempty"`
	SuggestionCount  int32                  `protobuf:"varint,4,opt,name=suggestion_count,json=suggestionCount,proto3" json:"suggestion_count,omitempty"`
	Tone             string                 `protobuf:"bytes,5,opt,name=tone,proto3" json:"tone,omitempty"` // "casual", "formal", "friendly", "professional"
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GenerateResponseSuggestionsRequest) Reset() {
	*x = GenerateResponseSuggestionsRequest{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateResponseSuggestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateResponseSuggestionsRequest) ProtoMessage() {}

func (x *GenerateResponseSuggestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateResponseSuggestionsRequest.ProtoReflect.Descriptor instead.
func (*GenerateResponseSuggestionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateResponseSuggestionsRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *GenerateResponseSuggestionsRequest) GetRecentMessages() []*AIMessage {
	if x != nil {
		return x.RecentMessages
	}
	return nil
}

func (x *GenerateResponseSuggestionsRequest) GetRequestingUserId() *common.UUID {
	if x != nil {
		return x.RequestingUserId
	}
	return nil
}

func (x *GenerateResponseSuggestionsRequest) GetSuggestionCount() int32 {
	if x != nil {
		return x.SuggestionCount
	}
	return 0
}

func (x *GenerateResponseSuggestionsRequest) GetTone() string {
	if x != nil {
		return x.Tone
	}
	return ""
}

type GenerateResponseSuggestionsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Suggestions   []*ResponseSuggestion   `protobuf:"bytes,1,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
	Result        *common.SuccessResponse `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateResponseSuggestionsResponse) Reset() {
	*x = GenerateResponseSuggestionsResponse{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateResponseSuggestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateResponseSuggestionsResponse) ProtoMessage() {}

func (x *GenerateResponseSuggestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateResponseSuggestionsResponse.ProtoReflect.Descriptor instead.
func (*GenerateResponseSuggestionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{6}
}

func (x *GenerateResponseSuggestionsResponse) GetSuggestions() []*ResponseSuggestion {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

func (x *GenerateResponseSuggestionsResponse) GetResult() *common.SuccessResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type ResponseSuggestion struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Text            string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Category        string                 `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"` // "question", "agreement", "clarification", "emoji"
	ConfidenceScore float32                `protobuf:"fixed32,3,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	Reasoning       string                 `protobuf:"bytes,4,opt,name=reasoning,proto3" json:"reasoning,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ResponseSuggestion) Reset() {
	*x = ResponseSuggestion{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseSuggestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSuggestion) ProtoMessage() {}

func (x *ResponseSuggestion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSuggestion.ProtoReflect.Descriptor instead.
func (*ResponseSuggestion) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseSuggestion) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ResponseSuggestion) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ResponseSuggestion) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *ResponseSuggestion) GetReasoning() string {
	if x != nil {
		return x.Reasoning
	}
	return ""
}

// Sentiment analysis
type AnalyzeSentimentRequest struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Messages                  []*AIMessage           `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	RequestingUserId          *common.UUID           `protobuf:"bytes,2,opt,name=requesting_user_id,json=requestingUserId,proto3" json:"requesting_user_id,omitempty"`
	IncludeIndividualAnalysis bool                   `protobuf:"varint,3,opt,name=include_individual_analysis,json=includeIndividualAnalysis,proto3" json:"include_individual_analysis,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *AnalyzeSentimentRequest) Reset() {
	*x = AnalyzeSentimentRequest{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeSentimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeSentimentRequest) ProtoMessage() {}

func (x *AnalyzeSentimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeSentimentRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeSentimentRequest) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{8}
}

func (x *AnalyzeSentimentRequest) GetMessages() []*AIMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *AnalyzeSentimentRequest) GetRequestingUserId() *common.UUID {
	if x != nil {
		return x.RequestingUserId
	}
	return nil
}

func (x *AnalyzeSentimentRequest) GetIncludeIndividualAnalysis() bool {
	if x != nil {
		return x.IncludeIndividualAnalysis
	}
	return false
}

type AnalyzeSentimentResponse struct {
	state                protoimpl.MessageState  `protogen:"open.v1"`
	OverallSentiment     Sentiment               `protobuf:"varint,1,opt,name=overall_sentiment,json=overallSentiment,proto3,enum=ai.Sentiment" json:"overall_sentiment,omitempty"`
	ConfidenceScore      float32                 `protobuf:"fixed32,2,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	IndividualSentiments []*MessageSentiment     `protobuf:"bytes,3,rep,name=individual_sentiments,json=individualSentiments,proto3" json:"individual_sentiments,omitempty"`
	Trends               *SentimentTrends        `protobuf:"bytes,4,opt,name=trends,proto3" json:"trends,omitempty"`
	Result               *common.SuccessResponse `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AnalyzeSentimentResponse) Reset() {
	*x = AnalyzeSentimentResponse{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeSentimentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeSentimentResponse) ProtoMessage() {}

func (x *AnalyzeSentimentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeSentimentResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeSentimentResponse) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{9}
}

func (x *AnalyzeSentimentResponse) GetOverallSentiment() Sentiment {
	if x != nil {
		return x.OverallSentiment
	}
	return Sentiment_NEUTRAL
}

func (x *AnalyzeSentimentResponse) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *AnalyzeSentimentResponse) GetIndividualSentiments() []*MessageSentiment {
	if x != nil {
		return x.IndividualSentiments
	}
	return nil
}

func (x *AnalyzeSentimentResponse) GetTrends() *SentimentTrends {
	if x != nil {
		return x.Trends
	}
	return nil
}

func (x *AnalyzeSentimentResponse) GetResult() *common.SuccessResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type MessageSentiment struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MessageId       *common.UUID           `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Sentiment       Sentiment              `protobuf:"varint,2,opt,name=sentiment,proto3,enum=ai.Sentiment" json:"sentiment,omitempty"`
	ConfidenceScore float32                `protobuf:"fixed32,3,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	EmotionTags     []string               `protobuf:"bytes,4,rep,name=emotion_tags,json=emotionTags,proto3" json:"emotion_tags,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MessageSentiment) Reset() {
	*x = MessageSentiment{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageSentiment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSentiment) ProtoMessage() {}

func (x *MessageSentiment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSentiment.ProtoReflect.Descriptor instead.
func (*MessageSentiment) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{10}
}

func (x *MessageSentiment) GetMessageId() *common.UUID {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *MessageSentiment) GetSentiment() Sentiment {
	if x != nil {
		return x.Sentiment
	}
	return Sentiment_NEUTRAL
}

func (x *MessageSentiment) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *MessageSentiment) GetEmotionTags() []string {
	if x != nil {
		return x.EmotionTags
	}
	return nil
}

type SentimentTrends struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TrendPoints    []*SentimentDataPoint  `protobuf:"bytes,1,rep,name=trend_points,json=trendPoints,proto3" json:"trend_points,omitempty"`
	TrendDirection string                 `protobuf:"bytes,2,opt,name=trend_direction,json=trendDirection,proto3" json:"trend_direction,omitempty"` // "improving", "declining", "stable"
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SentimentTrends) Reset() {
	*x = SentimentTrends{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SentimentTrends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentimentTrends) ProtoMessage() {}

func (x *SentimentTrends) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentimentTrends.ProtoReflect.Descriptor instead.
func (*SentimentTrends) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{11}
}

func (x *SentimentTrends) GetTrendPoints() []*SentimentDataPoint {
	if x != nil {
		return x.TrendPoints
	}
	return nil
}

func (x *SentimentTrends) GetTrendDirection() string {
	if x != nil {
		return x.TrendDirection
	}
	return ""
}

type SentimentDataPoint struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sentiment       Sentiment              `protobuf:"varint,2,opt,name=sentiment,proto3,enum=ai.Sentiment" json:"sentiment,omitempty"`
	ConfidenceScore float32                `protobuf:"fixed32,3,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SentimentDataPoint) Reset() {
	*x = SentimentDataPoint{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SentimentDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentimentDataPoint) ProtoMessage() {}

func (x *SentimentDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentimentDataPoint.ProtoReflect.Descriptor instead.
func (*SentimentDataPoint) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{12}
}

func (x *SentimentDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SentimentDataPoint) GetSentiment() Sentiment {
	if x != nil {
		return x.Sentiment
	}
	return Sentiment_NEUTRAL
}

func (x *SentimentDataPoint) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

// Streaming summarization
type StreamSummarizationRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConversationId   *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	RequestingUserId *common.UUID           `protobuf:"bytes,2,opt,name=requesting_user_id,json=requestingUserId,proto3" json:"requesting_user_id,omitempty"`
	ChunkSize        int32                  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	SummaryStyle     string                 `protobuf:"bytes,4,opt,name=summary_style,json=summaryStyle,proto3" json:"summary_style,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StreamSummarizationRequest) Reset() {
	*x = StreamSummarizationRequest{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSummarizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSummarizationRequest) ProtoMessage() {}

func (x *StreamSummarizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSummarizationRequest.ProtoReflect.Descriptor instead.
func (*StreamSummarizationRequest) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{13}
}

func (x *StreamSummarizationRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *StreamSummarizationRequest) GetRequestingUserId() *common.UUID {
	if x != nil {
		return x.RequestingUserId
	}
	return nil
}

func (x *StreamSummarizationRequest) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *StreamSummarizationRequest) GetSummaryStyle() string {
	if x != nil {
		return x.SummaryStyle
	}
	return ""
}

type SummarizationChunk struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PartialSummary    string                 `protobuf:"bytes,1,opt,name=partial_summary,json=partialSummary,proto3" json:"partial_summary,omitempty"`
	MessagesProcessed int32                  `protobuf:"varint,2,opt,name=messages_processed,json=messagesProcessed,proto3" json:"messages_processed,omitempty"`
	TotalMessages     int32                  `protobuf:"varint,3,opt,name=total_messages,json=totalMessages,proto3" json:"total_messages,omitempty"`
	IsFinal           bool                   `protobuf:"varint,4,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	InterimTopics     []string               `protobuf:"bytes,5,rep,name=interim_topics,json=interimTopics,proto3" json:"interim_topics,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SummarizationChunk) Reset() {
	*x = SummarizationChunk{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizationChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizationChunk) ProtoMessage() {}

func (x *SummarizationChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizationChunk.ProtoReflect.Descriptor instead.
func (*SummarizationChunk) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{14}
}

func (x *SummarizationChunk) GetPartialSummary() string {
	if x != nil {
		return x.PartialSummary
	}
	return ""
}

func (x *SummarizationChunk) GetMessagesProcessed() int32 {
	if x != nil {
		return x.MessagesProcessed
	}
	return 0
}

func (x *SummarizationChunk) GetTotalMessages() int32 {
	if x != nil {
		return x.TotalMessages
	}
	return 0
}

func (x *SummarizationChunk) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *SummarizationChunk) GetInterimTopics() []string {
	if x != nil {
		return x.InterimTopics
	}
	return nil
}

// User consent operations
type CheckUserConsentRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         *common.UUID           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperationTypes []string               `protobuf:"bytes,2,rep,name=operation_types,json=operationTypes,proto3" json:"operation_types,omitempty"` // Types of AI operations to check
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CheckUserConsentRequest) Reset() {
	*x = CheckUserConsentRequest{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserConsentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserConsentRequest) ProtoMessage() {}

func (x *CheckUserConsentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserConsentRequest.ProtoReflect.Descriptor instead.
func (*CheckUserConsentRequest) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{15}
}

func (x *CheckUserConsentRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *CheckUserConsentRequest) GetOperationTypes() []string {
	if x != nil {
		return x.OperationTypes
	}
	return nil
}

type CheckUserConsentResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Consent              *UserConsent           `protobuf:"bytes,1,opt,name=consent,proto3" json:"consent,omitempty"`
	OperationPermissions map[string]bool        `protobuf:"bytes,2,rep,name=operation_permissions,json=operationPermissions,proto3" json:"operation_permissions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	ConsentRequired      bool                   `protobuf:"varint,3,opt,name=consent_required,json=consentRequired,proto3" json:"consent_required,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CheckUserConsentResponse) Reset() {
	*x = CheckUserConsentResponse{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserConsentResponse) ProtoMessage() {}

func (x *CheckUserConsentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserConsentResponse.ProtoReflect.Descriptor instead.
func (*CheckUserConsentResponse) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{16}
}

func (x *CheckUserConsentResponse) GetConsent() *UserConsent {
	if x != nil {
		return x.Consent
	}
	return nil
}

func (x *CheckUserConsentResponse) GetOperationPermissions() map[string]bool {
	if x != nil {
		return x.OperationPermissions
	}
	return nil
}

func (x *CheckUserConsentResponse) GetConsentRequired() bool {
	if x != nil {
		return x.ConsentRequired
	}
	return false
}

type UpdateUserConsentRequest struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	UserId                    *common.UUID           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ConversationSummarization ConsentLevel           `protobuf:"varint,2,opt,name=conversation_summarization,json=conversationSummarization,proto3,enum=ai.ConsentLevel" json:"conversation_summarization,omitempty"`
	SentimentAnalysis         ConsentLevel           `protobuf:"varint,3,opt,name=sentiment_analysis,json=sentimentAnalysis,proto3,enum=ai.ConsentLevel" json:"sentiment_analysis,omitempty"`
	ResponseSuggestions       ConsentLevel           `protobuf:"varint,4,opt,name=response_suggestions,json=responseSuggestions,proto3,enum=ai.ConsentLevel" json:"response_suggestions,omitempty"`
	InsightsGeneration        ConsentLevel           `protobuf:"varint,5,opt,name=insights_generation,json=insightsGeneration,proto3,enum=ai.ConsentLevel" json:"insights_generation,omitempty"`
	DataRetentionAllowed      bool                   `protobuf:"varint,6,opt,name=data_retention_allowed,json=dataRetentionAllowed,proto3" json:"data_retention_allowed,omitempty"`
	ExpiresAt                 *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UpdateUserConsentRequest) Reset() {
	*x = UpdateUserConsentRequest{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserConsentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserConsentRequest) ProtoMessage() {}

func (x *UpdateUserConsentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserConsentRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserConsentRequest) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateUserConsentRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *UpdateUserConsentRequest) GetConversationSummarization() ConsentLevel {
	if x != nil {
		return x.ConversationSummarization
	}
	return ConsentLevel_NONE
}

func (x *UpdateUserConsentRequest) GetSentimentAnalysis() ConsentLevel {
	if x != nil {
		return x.SentimentAnalysis
	}
	return ConsentLevel_NONE
}

func (x *UpdateUserConsentRequest) GetResponseSuggestions() ConsentLevel {
	if x != nil {
		return x.ResponseSuggestions
	}
	return ConsentLevel_NONE
}

func (x *UpdateUserConsentRequest) GetInsightsGeneration() ConsentLevel {
	if x != nil {
		return x.InsightsGeneration
	}
	return ConsentLevel_NONE
}

func (x *UpdateUserConsentRequest) GetDataRetentionAllowed() bool {
	if x != nil {
		return x.DataRetentionAllowed
	}
	return false
}

func (x *UpdateUserConsentRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type UpdateUserConsentResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Consent       *UserConsent            `protobuf:"bytes,1,opt,name=consent,proto3" json:"consent,omitempty"`
	Result        *common.SuccessResponse `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserConsentResponse) Reset() {
	*x = UpdateUserConsentResponse{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserConsentResponse) ProtoMessage() {}

func (x *UpdateUserConsentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserConsentResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserConsentResponse) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateUserConsentResponse) GetConsent() *UserConsent {
	if x != nil {
		return x.Consent
	}
	return nil
}

func (x *UpdateUserConsentResponse) GetResult() *common.SuccessResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

// Insights generation
type GenerateInsightsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          *common.UUID           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ConversationIds []*common.UUID         `protobuf:"bytes,2,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"`
	PeriodStart     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	PeriodEnd       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
	InsightTypes    []string               `protobuf:"bytes,5,rep,name=insight_types,json=insightTypes,proto3" json:"insight_types,omitempty"` // "communication_patterns", "topic_preferences", "sentiment_trends"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateInsightsRequest) Reset() {
	*x = GenerateInsightsRequest{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateInsightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInsightsRequest) ProtoMessage() {}

func (x *GenerateInsightsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInsightsRequest.ProtoReflect.Descriptor instead.
func (*GenerateInsightsRequest) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{19}
}

func (x *GenerateInsightsRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *GenerateInsightsRequest) GetConversationIds() []*common.UUID {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

func (x *GenerateInsightsRequest) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *GenerateInsightsRequest) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

func (x *GenerateInsightsRequest) GetInsightTypes() []string {
	if x != nil {
		return x.InsightTypes
	}
	return nil
}

type GenerateInsightsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Insights      []*Insight              `protobuf:"bytes,1,rep,name=insights,proto3" json:"insights,omitempty"`
	Result        *common.SuccessResponse `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateInsightsResponse) Reset() {
	*x = GenerateInsightsResponse{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateInsightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInsightsResponse) ProtoMessage() {}

func (x *GenerateInsightsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInsightsResponse.ProtoReflect.Descriptor instead.
func (*GenerateInsightsResponse) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{20}
}

func (x *GenerateInsightsResponse) GetInsights() []*Insight {
	if x != nil {
		return x.Insights
	}
	return nil
}

func (x *GenerateInsightsResponse) GetResult() *common.SuccessResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type Insight struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Type               string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Title              string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description        string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Data               map[string]string      `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ConfidenceScore    float32                `protobuf:"fixed32,5,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	SupportingEvidence []string               `protobuf:"bytes,6,rep,name=supporting_evidence,json=supportingEvidence,proto3" json:"supporting_evidence,omitempty"`
	GeneratedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Insight) Reset() {
	*x = Insight{}
	mi := &file_proto_ai_ai_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Insight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Insight) ProtoMessage() {}

func (x *Insight) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ai_ai_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Insight.ProtoReflect.Descriptor instead.
func (*Insight) Descriptor() ([]byte, []int) {
	return file_proto_ai_ai_service_proto_rawDescGZIP(), []int{21}
}

func (x *Insight) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Insight) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Insight) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Insight) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Insight) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *Insight) GetSupportingEvidence() []string {
	if x != nil {
		return x.SupportingEvidence
	}
	return nil
}

func (x *Insight) GetGeneratedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.GeneratedAt
	}
	return nil
}

var File_proto_ai_ai_service_proto protoreflect.FileDescriptor

const file_proto_ai_ai_service_proto_rawDesc = "" +
	"\n" +
	"\x19proto/ai/ai_service.proto\x12\x02ai\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x18proto/common/types.proto\"\x9e\x02\n" +
	"\tAIMessage\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\v2\f.common.UUIDR\x02id\x12)\n" +
	"\tsender_id\x18\x02 \x01(\v2\f.common.UUIDR\bsenderId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x127\n" +
	"\bmetadata\x18\x05 \x03(\v2\x1b.ai.AIMessage.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfa\x03\n" +
	"\vUserConsent\x12%\n" +
	"\auser_id\x18\x01 \x01(\v2\f.common.UUIDR\x06userId\x12O\n" +
	"\x1aconversation_summarization\x18\x02 \x01(\x0e2\x10.ai.ConsentLevelR\x19conversationSummarization\x12?\n" +
	"\x12sentiment_analysis\x18\x03 \x01(\x0e2\x10.ai.ConsentLevelR\x11sentimentAnalysis\x12C\n" +
	"\x14response_suggestions\x18\x04 \x01(\x0e2\x10.ai.ConsentLevelR\x13responseSuggestions\x12A\n" +
	"\x13insights_generation\x18\x05 \x01(\x0e2\x10.ai.ConsentLevelR\x12insightsGeneration\x124\n" +
	"\x16data_retention_allowed\x18\x06 \x01(\bR\x14dataRetentionAllowed\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"expires_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\xb2\x02\n" +
	"\x1cSummarizeConversationRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x12)\n" +
	"\bmessages\x18\x02 \x03(\v2\r.ai.AIMessageR\bmessages\x12:\n" +
	"\x12requesting_user_id\x18\x03 \x01(\v2\f.common.UUIDR\x10requestingUserId\x12,\n" +
	"\x12max_summary_length\x18\x04 \x01(\x05R\x10maxSummaryLength\x12#\n" +
	"\rsummary_style\x18\x05 \x01(\tR\fsummaryStyle\x12!\n" +
	"\ffocus_topics\x18\x06 \x03(\tR\vfocusTopics\"\xba\x03\n" +
	"\x1dSummarizeConversationResponse\x12\x18\n" +
	"\asummary\x18\x01 \x01(\tR\asummary\x12\x1d\n" +
	"\n" +
	"key_topics\x18\x02 \x03(\tR\tkeyTopics\x123\n" +
	"\fparticipants\x18\x03 \x03(\v2\x0f.ai.ParticipantR\fparticipants\x12#\n" +
	"\rmessage_count\x18\x04 \x01(\x05R\fmessageCount\x12V\n" +
	"\x19conversation_period_start\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x17conversationPeriodStart\x12R\n" +
	"\x17conversation_period_end\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x15conversationPeriodEnd\x12)\n" +
	"\x10confidence_score\x18\a \x01(\x02R\x0fconfidenceScore\x12/\n" +
	"\x06result\x18\b \x01(\v2\x17.common.SuccessResponseR\x06result\"\xab\x01\n" +
	"\vParticipant\x12%\n" +
	"\auser_id\x18\x01 \x01(\v2\f.common.UUIDR\x06userId\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12#\n" +
	"\rmessage_count\x18\x03 \x01(\x05R\fmessageCount\x12<\n" +
	"\x12dominant_sentiment\x18\x04 \x01(\x0e2\r.ai.SentimentR\x11dominantSentiment\"\x8e\x02\n" +
	"\"GenerateResponseSuggestionsRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x126\n" +
	"\x0frecent_messages\x18\x02 \x03(\v2\r.ai.AIMessageR\x0erecentMessages\x12:\n" +
	"\x12requesting_user_id\x18\x03 \x01(\v2\f.common.UUIDR\x10requestingUserId\x12)\n" +
	"\x10suggestion_count\x18\x04 \x01(\x05R\x0fsuggestionCount\x12\x12\n" +
	"\x04tone\x18\x05 \x01(\tR\x04tone\"\x90\x01\n" +
	"#GenerateResponseSuggestionsResponse\x128\n" +
	"\vsuggestions\x18\x01 \x03(\v2\x16.ai.ResponseSuggestionR\vsuggestions\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.common.SuccessResponseR\x06result\"\x8d\x01\n" +
	"\x12ResponseSuggestion\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\x12)\n" +
	"\x10confidence_score\x18\x03 \x01(\x02R\x0fconfidenceScore\x12\x1c\n" +
	"\treasoning\x18\x04 \x01(\tR\treasoning\"\xc0\x01\n" +
	"\x17AnalyzeSentimentRequest\x12)\n" +
	"\bmessages\x18\x01 \x03(\v2\r.ai.AIMessageR\bmessages\x12:\n" +
	"\x12requesting_user_id\x18\x02 \x01(\v2\f.common.UUIDR\x10requestingUserId\x12>\n" +
	"\x1binclude_individual_analysis\x18\x03 \x01(\bR\x19includeIndividualAnalysis\"\xaa\x02\n" +
	"\x18AnalyzeSentimentResponse\x12:\n" +
	"\x11overall_sentiment\x18\x01 \x01(\x0e2\r.ai.SentimentR\x10overallSentiment\x12)\n" +
	"\x10confidence_score\x18\x02 \x01(\x02R\x0fconfidenceScore\x12I\n" +
	"\x15individual_sentiments\x18\x03 \x03(\v2\x14.ai.MessageSentimentR\x14individualSentiments\x12+\n" +
	"\x06trends\x18\x04 \x01(\v2\x13.ai.SentimentTrendsR\x06trends\x12/\n" +
	"\x06result\x18\x05 \x01(\v2\x17.common.SuccessResponseR\x06result\"\xba\x01\n" +
	"\x10MessageSentiment\x12+\n" +
	"\n" +
	"message_id\x18\x01 \x01(\v2\f.common.UUIDR\tmessageId\x12+\n" +
	"\tsentiment\x18\x02 \x01(\x0e2\r.ai.SentimentR\tsentiment\x12)\n" +
	"\x10confidence_score\x18\x03 \x01(\x02R\x0fconfidenceScore\x12!\n" +
	"\femotion_tags\x18\x04 \x03(\tR\vemotionTags\"u\n" +
	"\x0fSentimentTrends\x129\n" +
	"\ftrend_points\x18\x01 \x03(\v2\x16.ai.SentimentDataPointR\vtrendPoints\x12'\n" +
	"\x0ftrend_direction\x18\x02 \x01(\tR\x0etrendDirection\"\xa6\x01\n" +
	"\x12SentimentDataPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12+\n" +
	"\tsentiment\x18\x02 \x01(\x0e2\r.ai.SentimentR\tsentiment\x12)\n" +
	"\x10confidence_score\x18\x03 \x01(\x02R\x0fconfidenceScore\"\xd3\x01\n" +
	"\x1aStreamSummarizationRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x12:\n" +
	"\x12requesting_user_id\x18\x02 \x01(\v2\f.common.UUIDR\x10requestingUserId\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x03 \x01(\x05R\tchunkSize\x12#\n" +
	"\rsummary_style\x18\x04 \x01(\tR\fsummaryStyle\"\xd5\x01\n" +
	"\x12SummarizationChunk\x12'\n" +
	"\x0fpartial_summary\x18\x01 \x01(\tR\x0epartialSummary\x12-\n" +
	"\x12messages_processed\x18\x02 \x01(\x05R\x11messagesProcessed\x12%\n" +
	"\x0etotal_messages\x18\x03 \x01(\x05R\rtotalMessages\x12\x19\n" +
	"\bis_final\x18\x04 \x01(\bR\aisFinal\x12%\n" +
	"\x0einterim_topics\x18\x05 \x03(\tR\rinterimTopics\"i\n" +
	"\x17CheckUserConsentRequest\x12%\n" +
	"\auser_id\x18\x01 \x01(\v2\f.common.UUIDR\x06userId\x12'\n" +
	"\x0foperation_types\x18\x02 \x03(\tR\x0eoperationTypes\"\xa6\x02\n" +
	"\x18CheckUserConsentResponse\x12)\n" +
	"\aconsent\x18\x01 \x01(\v2\x0f.ai.UserConsentR\aconsent\x12k\n" +
	"\x15operation_permissions\x18\x02 \x03(\v26.ai.CheckUserConsentResponse.OperationPermissionsEntryR\x14operationPermissions\x12)\n" +
	"\x10consent_required\x18\x03 \x01(\bR\x0fconsentRequired\x1aG\n" +
	"\x19OperationPermissionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"\xcc\x03\n" +
	"\x18UpdateUserConsentRequest\x12%\n" +
	"\auser_id\x18\x01 \x01(\v2\f.common.UUIDR\x06userId\x12O\n" +
	"\x1aconversation_summarization\x18\x02 \x01(\x0e2\x10.ai.ConsentLevelR\x19conversationSummarization\x12?\n" +
	"\x12sentiment_analysis\x18\x03 \x01(\x0e2\x10.ai.ConsentLevelR\x11sentimentAnalysis\x12C\n" +
	"\x14response_suggestions\x18\x04 \x01(\x0e2\x10.ai.ConsentLevelR\x13responseSuggestions\x12A\n" +
	"\x13insights_generation\x18\x05 \x01(\x0e2\x10.ai.ConsentLevelR\x12insightsGeneration\x124\n" +
	"\x16data_retention_allowed\x18\x06 \x01(\bR\x14dataRetentionAllowed\x129\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"w\n" +
	"\x19UpdateUserConsentResponse\x12)\n" +
	"\aconsent\x18\x01 \x01(\v2\x0f.ai.UserConsentR\aconsent\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.common.SuccessResponseR\x06result\"\x98\x02\n" +
	"\x17GenerateInsightsRequest\x12%\n" +
	"\auser_id\x18\x01 \x01(\v2\f.common.UUIDR\x06userId\x127\n" +
	"\x10conversation_ids\x18\x02 \x03(\v2\f.common.UUIDR\x0fconversationIds\x12=\n" +
	"\fperiod_start\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vperiodStart\x129\n" +
	"\n" +
	"period_end\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tperiodEnd\x12#\n" +
	"\rinsight_types\x18\x05 \x03(\tR\finsightTypes\"t\n" +
	"\x18GenerateInsightsResponse\x12'\n" +
	"\binsights\x18\x01 \x03(\v2\v.ai.InsightR\binsights\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.common.SuccessResponseR\x06result\"\xd4\x02\n" +
	"\aInsight\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12)\n" +
	"\x04data\x18\x04 \x03(\v2\x15.ai.Insight.DataEntryR\x04data\x12)\n" +
	"\x10confidence_score\x18\x05 \x01(\x02R\x0fconfidenceScore\x12/\n" +
	"\x13supporting_evidence\x18\x06 \x03(\tR\x12supportingEvidence\x12=\n" +
	"\fgenerated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vgeneratedAt\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*-\n" +
	"\fConsentLevel\x12\b\n" +
	"\x04NONE\x10\x00\x12\t\n" +
	"\x05BASIC\x10\x01\x12\b\n" +
	"\x04FULL\x10\x02*?\n" +
	"\tSentiment\x12\v\n" +
	"\aNEUTRAL\x10\x00\x12\f\n" +
	"\bPOSITIVE\x10\x01\x12\f\n" +
	"\bNEGATIVE\x10\x02\x12\t\n" +
	"\x05MIXED\x10\x032\xac\x05\n" +
	"\tAIService\x12\\\n" +
	"\x15SummarizeConversation\x12 .ai.SummarizeConversationRequest\x1a!.ai.SummarizeConversationResponse\x12n\n" +
	"\x1bGenerateResponseSuggestions\x12&.ai.GenerateResponseSuggestionsRequest\x1a'.ai.GenerateResponseSuggestionsResponse\x12M\n" +
	"\x10AnalyzeSentiment\x12\x1b.ai.AnalyzeSentimentRequest\x1a\x1c.ai.AnalyzeSentimentResponse\x12O\n" +
	"\x13StreamSummarization\x12\x1e.ai.StreamSummarizationRequest\x1a\x16.ai.SummarizationChunk0\x01\x12M\n" +
	"\x10CheckUserConsent\x12\x1b.ai.CheckUserConsentRequest\x1a\x1c.ai.CheckUserConsentResponse\x12P\n" +
	"\x11UpdateUserConsent\x12\x1c.ai.UpdateUserConsentRequest\x1a\x1d.ai.UpdateUserConsentResponse\x12M\n" +
	"\x10GenerateInsights\x12\x1b.ai.GenerateInsightsRequest\x1a\x1c.ai.GenerateInsightsResponse\x12A\n" +
	"\x06Health\x12\x1a.common.HealthCheckRequest\x1a\x1b.common.HealthCheckResponseB&Z$github.com/link-app/backend/proto/aib\x06proto3"

var (
	file_proto_ai_ai_service_proto_rawDescOnce sync.Once
	file_proto_ai_ai_service_proto_rawDescData []byte
)

func file_proto_ai_ai_service_proto_rawDescGZIP() []byte {
	file_proto_ai_ai_service_proto_rawDescOnce.Do(func() {
		file_proto_ai_ai_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_ai_ai_service_proto_rawDesc), len(file_proto_ai_ai_service_proto_rawDesc)))
	})
	return file_proto_ai_ai_service_proto_rawDescData
}

var file_proto_ai_ai_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_ai_ai_service_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_ai_ai_service_proto_goTypes = []any{
	(ConsentLevel)(0),                           // 0: ai.ConsentLevel
	(Sentiment)(0),                              // 1: ai.Sentiment
	(*AIMessage)(nil),                           // 2: ai.AIMessage
	(*UserConsent)(nil),                         // 3: ai.UserConsent
	(*SummarizeConversationRequest)(nil),        // 4: ai.SummarizeConversationRequest
	(*SummarizeConversationResponse)(nil),       // 5: ai.SummarizeConversationResponse
	(*Participant)(nil),                         // 6: ai.Participant
	(*GenerateResponseSuggestionsRequest)(nil),  // 7: ai.GenerateResponseSuggestionsRequest
	(*GenerateResponseSuggestionsResponse)(nil), // 8: ai.GenerateResponseSuggestionsResponse
	(*ResponseSuggestion)(nil),                  // 9: ai.ResponseSuggestion
	(*AnalyzeSentimentRequest)(nil),             // 10: ai.AnalyzeSentimentRequest
	(*AnalyzeSentimentResponse)(nil),            // 11: ai.AnalyzeSentimentResponse
	(*MessageSentiment)(nil),                    // 12: ai.MessageSentiment
	(*SentimentTrends)(nil),                     // 13: ai.SentimentTrends
	(*SentimentDataPoint)(nil),                  // 14: ai.SentimentDataPoint
	(*StreamSummarizationRequest)(nil),          // 15: ai.StreamSummarizationRequest
	(*SummarizationChunk)(nil),                  // 16: ai.SummarizationChunk
	(*CheckUserConsentRequest)(nil),             // 17: ai.CheckUserConsentRequest
	(*CheckUserConsentResponse)(nil),            // 18: ai.CheckUserConsentResponse
	(*UpdateUserConsentRequest)(nil),            // 19: ai.UpdateUserConsentRequest
	(*UpdateUserConsentResponse)(nil),           // 20: ai.UpdateUserConsentResponse
	(*GenerateInsightsRequest)(nil),             // 21: ai.GenerateInsightsRequest
	(*GenerateInsightsResponse)(nil),            // 22: ai.GenerateInsightsResponse
	(*Insight)(nil),                             // 23: ai.Insight
	nil,                                         // 24: ai.AIMessage.MetadataEntry
	nil,                                         // 25: ai.CheckUserConsentResponse.OperationPermissionsEntry
	nil,                                         // 26: ai.Insight.DataEntry
	(*common.UUID)(nil),                         // 27: common.UUID
	(*timestamppb.Timestamp)(nil),               // 28: google.protobuf.Timestamp
	(*common.SuccessResponse)(nil),              // 29: common.SuccessResponse
	(*common.HealthCheckRequest)(nil),           // 30: common.HealthCheckRequest
	(*common.HealthCheckResponse)(nil),          // 31: common.HealthCheckResponse
}
var file_proto_ai_ai_service_proto_depIdxs = []int32{
	27, // 0: ai.AIMessage.id:type_name -> common.UUID
	27, // 1: ai.AIMessage.sender_id:type_name -> common.UUID
	28, // 2: ai.AIMessage.timestamp:type_name -> google.protobuf.Timestamp
	24, // 3: ai.AIMessage.metadata:type_name -> ai.AIMessage.MetadataEntry
	27, // 4: ai.UserConsent.user_id:type_name -> common.UUID
	0,  // 5: ai.UserConsent.conversation_summarization:type_name -> ai.ConsentLevel
	0,  // 6: ai.UserConsent.sentiment_analysis:type_name -> ai.ConsentLevel
	0,  // 7: ai.UserConsent.response_suggestions:type_name -> ai.ConsentLevel
	0,  // 8: ai.UserConsent.insights_generation:type_name -> ai.ConsentLevel
	28, // 9: ai.UserConsent.updated_at:type_name -> google.protobuf.Timestamp
	28, // 10: ai.UserConsent.expires_at:type_name -> google.protobuf.Timestamp
	27, // 11: ai.SummarizeConversationRequest.conversation_id:type_name -> common.UUID
	2,  // 12: ai.SummarizeConversationRequest.messages:type_name -> ai.AIMessage
	27, // 13: ai.SummarizeConversationRequest.requesting_user_id:type_name -> common.UUID
	6,  // 14: ai.SummarizeConversationResponse.participants:type_name -> ai.Participant
	28, // 15: ai.SummarizeConversationResponse.conversation_period_start:type_name -> google.protobuf.Timestamp
	28, // 16: ai.SummarizeConversationResponse.conversation_period_end:type_name -> google.protobuf.Timestamp
	29, // 17: ai.SummarizeConversationResponse.result:type_name -> common.SuccessResponse
	27, // 18: ai.Participant.user_id:type_name -> common.UUID
	1,  // 19: ai.Participant.dominant_sentiment:type_name -> ai.Sentiment
	27, // 20: ai.GenerateResponseSuggestionsRequest.conversation_id:type_name -> common.UUID
	2,  // 21: ai.GenerateResponseSuggestionsRequest.recent_messages:type_name -> ai.AIMessage
	27, // 22: ai.GenerateResponseSuggestionsRequest.requesting_user_id:type_name -> common.UUID
	9,  // 23: ai.GenerateResponseSuggestionsResponse.suggestions:type_name -> ai.ResponseSuggestion
	29, // 24: ai.GenerateResponseSuggestionsResponse.result:type_name -> common.SuccessResponse
	2,  // 25: ai.AnalyzeSentimentRequest.messages:type_name -> ai.AIMessage
	27, // 26: ai.AnalyzeSentimentRequest.requesting_user_id:type_name -> common.UUID
	1,  // 27: ai.AnalyzeSentimentResponse.overall_sentiment:type_name -> ai.Sentiment
	12, // 28: ai.AnalyzeSentimentResponse.individual_sentiments:type_name -> ai.MessageSentiment
	13, // 29: ai.AnalyzeSentimentResponse.trends:type_name -> ai.SentimentTrends
	29, // 30: ai.AnalyzeSentimentResponse.result:type_name -> common.SuccessResponse
	27, // 31: ai.MessageSentiment.message_id:type_name -> common.UUID
	1,  // 32: ai.MessageSentiment.sentiment:type_name -> ai.Sentiment
	14, // 33: ai.SentimentTrends.trend_points:type_name -> ai.SentimentDataPoint
	28, // 34: ai.SentimentDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 35: ai.SentimentDataPoint.sentiment:type_name -> ai.Sentiment
	27, // 36: ai.StreamSummarizationRequest.conversation_id:type_name -> common.UUID
	27, // 37: ai.StreamSummarizationRequest.requesting_user_id:type_name -> common.UUID
	27, // 38: ai.CheckUserConsentRequest.user_id:type_name -> common.UUID
	3,  // 39: ai.CheckUserConsentResponse.consent:type_name -> ai.UserConsent
	25, // 40: ai.CheckUserConsentResponse.operation_permissions:type_name -> ai.CheckUserConsentResponse.OperationPermissionsEntry
	27, // 41: ai.UpdateUserConsentRequest.user_id:type_name -> common.UUID
	0,  // 42: ai.UpdateUserConsentRequest.conversation_summarization:type_name -> ai.ConsentLevel
	0,  // 43: ai.UpdateUserConsentRequest.sentiment_analysis:type_name -> ai.ConsentLevel
	0,  // 44: ai.UpdateUserConsentRequest.response_suggestions:type_name -> ai.ConsentLevel
	0,  // 45: ai.UpdateUserConsentRequest.insights_generation:type_name -> ai.ConsentLevel
	28, // 46: ai.UpdateUserConsentRequest.expires_at:type_name -> google.protobuf.Timestamp
	3,  // 47: ai.UpdateUserConsentResponse.consent:type_name -> ai.UserConsent
	29, // 48: ai.UpdateUserConsentResponse.result:type_name -> common.SuccessResponse
	27, // 49: ai.GenerateInsightsRequest.user_id:type_name -> common.UUID
	27, // 50: ai.GenerateInsightsRequest.conversation_ids:type_name -> common.UUID
	28, // 51: ai.GenerateInsightsRequest.period_start:type_name -> google.protobuf.Timestamp
	28, // 52: ai.GenerateInsightsRequest.period_end:type_name -> google.protobuf.Timestamp
	23, // 53: ai.GenerateInsightsResponse.insights:type_name -> ai.Insight
	29, // 54: ai.GenerateInsightsResponse.result:type_name -> common.SuccessResponse
	26, // 55: ai.Insight.data:type_name -> ai.Insight.DataEntry
	28, // 56: ai.Insight.generated_at:type_name -> google.protobuf.Timestamp
	4,  // 57: ai.AIService.SummarizeConversation:input_type -> ai.SummarizeConversationRequest
	7,  // 58: ai.AIService.GenerateResponseSuggestions:input_type -> ai.GenerateResponseSuggestionsRequest
	10, // 59: ai.AIService.AnalyzeSentiment:input_type -> ai.AnalyzeSentimentRequest
	15, // 60: ai.AIService.StreamSummarization:input_type -> ai.StreamSummarizationRequest
	17, // 61: ai.AIService.CheckUserConsent:input_type -> ai.CheckUserConsentRequest
	19, // 62: ai.AIService.UpdateUserConsent:input_type -> ai.UpdateUserConsentRequest
	21, // 63: ai.AIService.GenerateInsights:input_type -> ai.GenerateInsightsRequest
	30, // 64: ai.AIService.Health:input_type -> common.HealthCheckRequest
	5,  // 65: ai.AIService.SummarizeConversation:output_type -> ai.SummarizeConversationResponse
	8,  // 66: ai.AIService.GenerateResponseSuggestions:output_type -> ai.GenerateResponseSuggestionsResponse
	11, // 67: ai.AIService.AnalyzeSentiment:output_type -> ai.AnalyzeSentimentResponse
	16, // 68: ai.AIService.StreamSummarization:output_type -> ai.SummarizationChunk
	18, // 69: ai.AIService.CheckUserConsent:output_type -> ai.CheckUserConsentResponse
	20, // 70: ai.AIService.UpdateUserConsent:output_type -> ai.UpdateUserConsentResponse
	22, // 71: ai.AIService.GenerateInsights:output_type -> ai.GenerateInsightsResponse
	31, // 72: ai.AIService.Health:output_type -> common.HealthCheckResponse
	65, // [65:73] is the sub-list for method output_type
	57, // [57:65] is the sub-list for method input_type
	57, // [57:57] is the sub-list for extension type_name
	57, // [57:57] is the sub-list for extension extendee
	0,  // [0:57] is the sub-list for field type_name
}

func init() { file_proto_ai_ai_service_proto_init() }
func file_proto_ai_ai_service_proto_init() {
	if File_proto_ai_ai_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_ai_ai_service_proto_rawDesc), len(file_proto_ai_ai_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ai_ai_service_proto_goTypes,
		DependencyIndexes: file_proto_ai_ai_service_proto_depIdxs,
		EnumInfos:         file_proto_ai_ai_service_proto_enumTypes,
		MessageInfos:      file_proto_ai_ai_service_proto_msgTypes,
	}.Build()
	File_proto_ai_ai_service_proto = out.File
	file_proto_ai_ai_service_proto_goTypes = nil
	file_proto_ai_ai_service_proto_depIdxs = nil
}
