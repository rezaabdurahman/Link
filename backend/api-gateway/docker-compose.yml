# API Gateway - Local Development Docker Compose
version: '3.8'

services:
  api-gateway:
    build:
      context: ..
      dockerfile: api-gateway/Dockerfile
    ports:
      - "${API_GATEWAY_PORT:-8080}:8080"
    env_file:
      - ../.env              # Shared infrastructure config
      - .env.local           # Service-specific local config (create this)
    environment:
      # Database connection (shared infrastructure)
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${POSTGRES_USER:-linkuser}
      DB_NAME: ${DB_NAME:-linkdb}
      
      # Redis connection (shared infrastructure)
      REDIS_HOST: ${REDIS_HOST:-redis-gateway}
      REDIS_PORT: ${REDIS_PORT:-6379}
      
      # Service URLs (for local development)
      USER_SVC_URL: ${USER_SVC_URL:-http://user-svc:8081}
      CHAT_SVC_URL: ${CHAT_SVC_URL:-http://chat-svc:8082}
      DISCOVERY_SVC_URL: ${DISCOVERY_SVC_URL:-http://discovery-svc:8083}
      AI_SVC_URL: ${AI_SVC_URL:-http://ai-svc:8084}
      SEARCH_SVC_URL: ${SEARCH_SVC_URL:-http://search-svc:8085}
      
      # Service-specific overrides
      PORT: 8080
      SERVICE_NAME: api-gateway
      
    depends_on:
      postgres:
        condition: service_healthy
      redis-gateway:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - link-network

  # Gateway-specific Redis instance  
  redis-gateway:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_gateway_data:/data
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - link-network

volumes:
  redis_gateway_data:

networks:
  link-network:
    external: true