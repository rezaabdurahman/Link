// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/chat/chat_service.proto

package chat

import (
	common "github.com/link-app/backend/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message types
type MessageType int32

const (
	MessageType_TEXT     MessageType = 0
	MessageType_IMAGE    MessageType = 1
	MessageType_FILE     MessageType = 2
	MessageType_AUDIO    MessageType = 3
	MessageType_VIDEO    MessageType = 4
	MessageType_LOCATION MessageType = 5
	MessageType_SYSTEM   MessageType = 6
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE",
		2: "FILE",
		3: "AUDIO",
		4: "VIDEO",
		5: "LOCATION",
		6: "SYSTEM",
	}
	MessageType_value = map[string]int32{
		"TEXT":     0,
		"IMAGE":    1,
		"FILE":     2,
		"AUDIO":    3,
		"VIDEO":    4,
		"LOCATION": 5,
		"SYSTEM":   6,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_chat_service_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_proto_chat_chat_service_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{0}
}

// Message status
type MessageStatus int32

const (
	MessageStatus_SENT      MessageStatus = 0
	MessageStatus_DELIVERED MessageStatus = 1
	MessageStatus_READ      MessageStatus = 2
	MessageStatus_FAILED    MessageStatus = 3
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "SENT",
		1: "DELIVERED",
		2: "READ",
		3: "FAILED",
	}
	MessageStatus_value = map[string]int32{
		"SENT":      0,
		"DELIVERED": 1,
		"READ":      2,
		"FAILED":    3,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_chat_service_proto_enumTypes[1].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_proto_chat_chat_service_proto_enumTypes[1]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{1}
}

// Conversation types
type ConversationType int32

const (
	ConversationType_DIRECT  ConversationType = 0
	ConversationType_GROUP   ConversationType = 1
	ConversationType_CHANNEL ConversationType = 2
)

// Enum value maps for ConversationType.
var (
	ConversationType_name = map[int32]string{
		0: "DIRECT",
		1: "GROUP",
		2: "CHANNEL",
	}
	ConversationType_value = map[string]int32{
		"DIRECT":  0,
		"GROUP":   1,
		"CHANNEL": 2,
	}
)

func (x ConversationType) Enum() *ConversationType {
	p := new(ConversationType)
	*p = x
	return p
}

func (x ConversationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_chat_service_proto_enumTypes[2].Descriptor()
}

func (ConversationType) Type() protoreflect.EnumType {
	return &file_proto_chat_chat_service_proto_enumTypes[2]
}

func (x ConversationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversationType.Descriptor instead.
func (ConversationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{2}
}

type UpdateType int32

const (
	UpdateType_MESSAGE_SENT      UpdateType = 0
	UpdateType_MESSAGE_DELIVERED UpdateType = 1
	UpdateType_MESSAGE_READ      UpdateType = 2
	UpdateType_MESSAGE_DELETED   UpdateType = 3
	UpdateType_MESSAGE_UPDATED   UpdateType = 4
	UpdateType_TYPING_STARTED    UpdateType = 5
	UpdateType_TYPING_STOPPED    UpdateType = 6
)

// Enum value maps for UpdateType.
var (
	UpdateType_name = map[int32]string{
		0: "MESSAGE_SENT",
		1: "MESSAGE_DELIVERED",
		2: "MESSAGE_READ",
		3: "MESSAGE_DELETED",
		4: "MESSAGE_UPDATED",
		5: "TYPING_STARTED",
		6: "TYPING_STOPPED",
	}
	UpdateType_value = map[string]int32{
		"MESSAGE_SENT":      0,
		"MESSAGE_DELIVERED": 1,
		"MESSAGE_READ":      2,
		"MESSAGE_DELETED":   3,
		"MESSAGE_UPDATED":   4,
		"TYPING_STARTED":    5,
		"TYPING_STOPPED":    6,
	}
)

func (x UpdateType) Enum() *UpdateType {
	p := new(UpdateType)
	*p = x
	return p
}

func (x UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_chat_service_proto_enumTypes[3].Descriptor()
}

func (UpdateType) Type() protoreflect.EnumType {
	return &file_proto_chat_chat_service_proto_enumTypes[3]
}

func (x UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateType.Descriptor instead.
func (UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{3}
}

// Message content
type Message struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             *common.UUID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConversationId *common.UUID           `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	SenderId       *common.UUID           `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Type           MessageType            `protobuf:"varint,4,opt,name=type,proto3,enum=chat.MessageType" json:"type,omitempty"`
	Content        string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status         MessageStatus          `protobuf:"varint,9,opt,name=status,proto3,enum=chat.MessageStatus" json:"status,omitempty"`
	ReadBy         []*MessageRead         `protobuf:"bytes,10,rep,name=read_by,json=readBy,proto3" json:"read_by,omitempty"`
	IsDeleted      bool                   `protobuf:"varint,11,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	ReplyToId      *common.UUID           `protobuf:"bytes,12,opt,name=reply_to_id,json=replyToId,proto3" json:"reply_to_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Message) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *Message) GetSenderId() *common.UUID {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TEXT
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Message) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Message) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Message) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_SENT
}

func (x *Message) GetReadBy() []*MessageRead {
	if x != nil {
		return x.ReadBy
	}
	return nil
}

func (x *Message) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Message) GetReplyToId() *common.UUID {
	if x != nil {
		return x.ReplyToId
	}
	return nil
}

// Message read tracking
type MessageRead struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        *common.UUID           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReadAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageRead) Reset() {
	*x = MessageRead{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRead) ProtoMessage() {}

func (x *MessageRead) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRead.ProtoReflect.Descriptor instead.
func (*MessageRead) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{1}
}

func (x *MessageRead) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *MessageRead) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

// Conversation details
type Conversation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             *common.UUID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type           ConversationType       `protobuf:"varint,3,opt,name=type,proto3,enum=chat.ConversationType" json:"type,omitempty"`
	ParticipantIds []*common.UUID         `protobuf:"bytes,4,rep,name=participant_ids,json=participantIds,proto3" json:"participant_ids,omitempty"`
	CreatedBy      *common.UUID           `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LastMessage    *Message               `protobuf:"bytes,8,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	UnreadCount    int32                  `protobuf:"varint,9,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	IsActive       bool                   `protobuf:"varint,10,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{2}
}

func (x *Conversation) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Conversation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Conversation) GetType() ConversationType {
	if x != nil {
		return x.Type
	}
	return ConversationType_DIRECT
}

func (x *Conversation) GetParticipantIds() []*common.UUID {
	if x != nil {
		return x.ParticipantIds
	}
	return nil
}

func (x *Conversation) GetCreatedBy() *common.UUID {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Conversation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Conversation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Conversation) GetLastMessage() *Message {
	if x != nil {
		return x.LastMessage
	}
	return nil
}

func (x *Conversation) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *Conversation) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Conversation) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Request messages
type GetRecentMessagesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationId  *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Limit           int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	BeforeMessageId *common.UUID           `protobuf:"bytes,3,opt,name=before_message_id,json=beforeMessageId,proto3" json:"before_message_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetRecentMessagesRequest) Reset() {
	*x = GetRecentMessagesRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecentMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentMessagesRequest) ProtoMessage() {}

func (x *GetRecentMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetRecentMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetRecentMessagesRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *GetRecentMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRecentMessagesRequest) GetBeforeMessageId() *common.UUID {
	if x != nil {
		return x.BeforeMessageId
	}
	return nil
}

type GetRecentMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	HasMore       bool                   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	NextCursor    *common.UUID           `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecentMessagesResponse) Reset() {
	*x = GetRecentMessagesResponse{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecentMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentMessagesResponse) ProtoMessage() {}

func (x *GetRecentMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetRecentMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetRecentMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetRecentMessagesResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetRecentMessagesResponse) GetNextCursor() *common.UUID {
	if x != nil {
		return x.NextCursor
	}
	return nil
}

type GetConversationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	UserId         *common.UUID           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationRequest) Reset() {
	*x = GetConversationRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationRequest) ProtoMessage() {}

func (x *GetConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationRequest.ProtoReflect.Descriptor instead.
func (*GetConversationRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetConversationRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *GetConversationRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

type GetConversationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *Conversation          `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationResponse) Reset() {
	*x = GetConversationResponse{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationResponse) ProtoMessage() {}

func (x *GetConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationResponse.ProtoReflect.Descriptor instead.
func (*GetConversationResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetConversationResponse) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type GetUserConversationsRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	UserId        *common.UUID              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Pagination    *common.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	TypeFilter    ConversationType          `protobuf:"varint,3,opt,name=type_filter,json=typeFilter,proto3,enum=chat.ConversationType" json:"type_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConversationsRequest) Reset() {
	*x = GetUserConversationsRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationsRequest) ProtoMessage() {}

func (x *GetUserConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationsRequest.ProtoReflect.Descriptor instead.
func (*GetUserConversationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserConversationsRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *GetUserConversationsRequest) GetPagination() *common.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetUserConversationsRequest) GetTypeFilter() ConversationType {
	if x != nil {
		return x.TypeFilter
	}
	return ConversationType_DIRECT
}

type GetUserConversationsResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Conversations []*Conversation            `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	Pagination    *common.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConversationsResponse) Reset() {
	*x = GetUserConversationsResponse{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationsResponse) ProtoMessage() {}

func (x *GetUserConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationsResponse.ProtoReflect.Descriptor instead.
func (*GetUserConversationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserConversationsResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

func (x *GetUserConversationsResponse) GetPagination() *common.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SendMessageRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	SenderId       *common.UUID           `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Type           MessageType            `protobuf:"varint,3,opt,name=type,proto3,enum=chat.MessageType" json:"type,omitempty"`
	Content        string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ReplyToId      *common.UUID           `protobuf:"bytes,6,opt,name=reply_to_id,json=replyToId,proto3" json:"reply_to_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{9}
}

func (x *SendMessageRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *SendMessageRequest) GetSenderId() *common.UUID {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *SendMessageRequest) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TEXT
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMessageRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SendMessageRequest) GetReplyToId() *common.UUID {
	if x != nil {
		return x.ReplyToId
	}
	return nil
}

type SendMessageResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Message       *Message                `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Result        *common.SuccessResponse `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{10}
}

func (x *SendMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendMessageResponse) GetResult() *common.SuccessResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type MarkMessagesReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	UserId         *common.UUID           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MessageIds     []*common.UUID         `protobuf:"bytes,3,rep,name=message_ids,json=messageIds,proto3" json:"message_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkMessagesReadRequest) Reset() {
	*x = MarkMessagesReadRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMessagesReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMessagesReadRequest) ProtoMessage() {}

func (x *MarkMessagesReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMessagesReadRequest.ProtoReflect.Descriptor instead.
func (*MarkMessagesReadRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{11}
}

func (x *MarkMessagesReadRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *MarkMessagesReadRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *MarkMessagesReadRequest) GetMessageIds() []*common.UUID {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

type MarkMessagesReadResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	MarkedCount   int32                   `protobuf:"varint,1,opt,name=marked_count,json=markedCount,proto3" json:"marked_count,omitempty"`
	Result        *common.SuccessResponse `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkMessagesReadResponse) Reset() {
	*x = MarkMessagesReadResponse{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMessagesReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMessagesReadResponse) ProtoMessage() {}

func (x *MarkMessagesReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMessagesReadResponse.ProtoReflect.Descriptor instead.
func (*MarkMessagesReadResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{12}
}

func (x *MarkMessagesReadResponse) GetMarkedCount() int32 {
	if x != nil {
		return x.MarkedCount
	}
	return 0
}

func (x *MarkMessagesReadResponse) GetResult() *common.SuccessResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type StreamMessagesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIds []*common.UUID         `protobuf:"bytes,1,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"`
	UserId          *common.UUID           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamMessagesRequest) Reset() {
	*x = StreamMessagesRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessagesRequest) ProtoMessage() {}

func (x *StreamMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessagesRequest.ProtoReflect.Descriptor instead.
func (*StreamMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{13}
}

func (x *StreamMessagesRequest) GetConversationIds() []*common.UUID {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

func (x *StreamMessagesRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

type MessageUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UpdateType     UpdateType             `protobuf:"varint,1,opt,name=update_type,json=updateType,proto3,enum=chat.UpdateType" json:"update_type,omitempty"`
	Message        *Message               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConversationId *common.UUID           `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MessageUpdate) Reset() {
	*x = MessageUpdate{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageUpdate) ProtoMessage() {}

func (x *MessageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageUpdate.ProtoReflect.Descriptor instead.
func (*MessageUpdate) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{14}
}

func (x *MessageUpdate) GetUpdateType() UpdateType {
	if x != nil {
		return x.UpdateType
	}
	return UpdateType_MESSAGE_SENT
}

func (x *MessageUpdate) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *MessageUpdate) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *MessageUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ChatStreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*ChatStreamRequest_Join
	//	*ChatStreamRequest_SendMessage
	//	*ChatStreamRequest_Typing
	//	*ChatStreamRequest_Leave
	Request       isChatStreamRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatStreamRequest) Reset() {
	*x = ChatStreamRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatStreamRequest) ProtoMessage() {}

func (x *ChatStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatStreamRequest.ProtoReflect.Descriptor instead.
func (*ChatStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{15}
}

func (x *ChatStreamRequest) GetRequest() isChatStreamRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ChatStreamRequest) GetJoin() *JoinRequest {
	if x != nil {
		if x, ok := x.Request.(*ChatStreamRequest_Join); ok {
			return x.Join
		}
	}
	return nil
}

func (x *ChatStreamRequest) GetSendMessage() *SendMessageRequest {
	if x != nil {
		if x, ok := x.Request.(*ChatStreamRequest_SendMessage); ok {
			return x.SendMessage
		}
	}
	return nil
}

func (x *ChatStreamRequest) GetTyping() *TypingRequest {
	if x != nil {
		if x, ok := x.Request.(*ChatStreamRequest_Typing); ok {
			return x.Typing
		}
	}
	return nil
}

func (x *ChatStreamRequest) GetLeave() *LeaveRequest {
	if x != nil {
		if x, ok := x.Request.(*ChatStreamRequest_Leave); ok {
			return x.Leave
		}
	}
	return nil
}

type isChatStreamRequest_Request interface {
	isChatStreamRequest_Request()
}

type ChatStreamRequest_Join struct {
	Join *JoinRequest `protobuf:"bytes,1,opt,name=join,proto3,oneof"`
}

type ChatStreamRequest_SendMessage struct {
	SendMessage *SendMessageRequest `protobuf:"bytes,2,opt,name=send_message,json=sendMessage,proto3,oneof"`
}

type ChatStreamRequest_Typing struct {
	Typing *TypingRequest `protobuf:"bytes,3,opt,name=typing,proto3,oneof"`
}

type ChatStreamRequest_Leave struct {
	Leave *LeaveRequest `protobuf:"bytes,4,opt,name=leave,proto3,oneof"`
}

func (*ChatStreamRequest_Join) isChatStreamRequest_Request() {}

func (*ChatStreamRequest_SendMessage) isChatStreamRequest_Request() {}

func (*ChatStreamRequest_Typing) isChatStreamRequest_Request() {}

func (*ChatStreamRequest_Leave) isChatStreamRequest_Request() {}

type JoinRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIds []*common.UUID         `protobuf:"bytes,1,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"`
	UserId          *common.UUID           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{16}
}

func (x *JoinRequest) GetConversationIds() []*common.UUID {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

func (x *JoinRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

type TypingRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	UserId         *common.UUID           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsTyping       bool                   `protobuf:"varint,3,opt,name=is_typing,json=isTyping,proto3" json:"is_typing,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TypingRequest) Reset() {
	*x = TypingRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingRequest) ProtoMessage() {}

func (x *TypingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingRequest.ProtoReflect.Descriptor instead.
func (*TypingRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{17}
}

func (x *TypingRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *TypingRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *TypingRequest) GetIsTyping() bool {
	if x != nil {
		return x.IsTyping
	}
	return false
}

type LeaveRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	UserId         *common.UUID           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{18}
}

func (x *LeaveRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *LeaveRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

type ChatStreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ChatStreamResponse_MessageUpdate
	//	*ChatStreamResponse_TypingUpdate
	//	*ChatStreamResponse_Error
	Response      isChatStreamResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatStreamResponse) Reset() {
	*x = ChatStreamResponse{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatStreamResponse) ProtoMessage() {}

func (x *ChatStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatStreamResponse.ProtoReflect.Descriptor instead.
func (*ChatStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{19}
}

func (x *ChatStreamResponse) GetResponse() isChatStreamResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ChatStreamResponse) GetMessageUpdate() *MessageUpdate {
	if x != nil {
		if x, ok := x.Response.(*ChatStreamResponse_MessageUpdate); ok {
			return x.MessageUpdate
		}
	}
	return nil
}

func (x *ChatStreamResponse) GetTypingUpdate() *TypingUpdate {
	if x != nil {
		if x, ok := x.Response.(*ChatStreamResponse_TypingUpdate); ok {
			return x.TypingUpdate
		}
	}
	return nil
}

func (x *ChatStreamResponse) GetError() *ErrorResponse {
	if x != nil {
		if x, ok := x.Response.(*ChatStreamResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isChatStreamResponse_Response interface {
	isChatStreamResponse_Response()
}

type ChatStreamResponse_MessageUpdate struct {
	MessageUpdate *MessageUpdate `protobuf:"bytes,1,opt,name=message_update,json=messageUpdate,proto3,oneof"`
}

type ChatStreamResponse_TypingUpdate struct {
	TypingUpdate *TypingUpdate `protobuf:"bytes,2,opt,name=typing_update,json=typingUpdate,proto3,oneof"`
}

type ChatStreamResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ChatStreamResponse_MessageUpdate) isChatStreamResponse_Response() {}

func (*ChatStreamResponse_TypingUpdate) isChatStreamResponse_Response() {}

func (*ChatStreamResponse_Error) isChatStreamResponse_Response() {}

type TypingUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId *common.UUID           `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	UserId         *common.UUID           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsTyping       bool                   `protobuf:"varint,3,opt,name=is_typing,json=isTyping,proto3" json:"is_typing,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TypingUpdate) Reset() {
	*x = TypingUpdate{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingUpdate) ProtoMessage() {}

func (x *TypingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingUpdate.ProtoReflect.Descriptor instead.
func (*TypingUpdate) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{20}
}

func (x *TypingUpdate) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *TypingUpdate) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *TypingUpdate) GetIsTyping() bool {
	if x != nil {
		return x.IsTyping
	}
	return false
}

func (x *TypingUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{21}
}

func (x *ErrorResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetMessageHistoryRequest struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	ConversationId *common.UUID              `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Pagination     *common.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Before         *timestamppb.Timestamp    `protobuf:"bytes,3,opt,name=before,proto3" json:"before,omitempty"`
	After          *timestamppb.Timestamp    `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetMessageHistoryRequest) Reset() {
	*x = GetMessageHistoryRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageHistoryRequest) ProtoMessage() {}

func (x *GetMessageHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetMessageHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetMessageHistoryRequest) GetConversationId() *common.UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *GetMessageHistoryRequest) GetPagination() *common.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetMessageHistoryRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *GetMessageHistoryRequest) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

type GetMessageHistoryResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Messages      []*Message                 `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	Pagination    *common.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessageHistoryResponse) Reset() {
	*x = GetMessageHistoryResponse{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageHistoryResponse) ProtoMessage() {}

func (x *GetMessageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetMessageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetMessageHistoryResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetMessageHistoryResponse) GetPagination() *common.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type DeleteMessageRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MessageId         *common.UUID           `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId            *common.UUID           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeleteForEveryone bool                   `protobuf:"varint,3,opt,name=delete_for_everyone,json=deleteForEveryone,proto3" json:"delete_for_everyone,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteMessageRequest) GetMessageId() *common.UUID {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *DeleteMessageRequest) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *DeleteMessageRequest) GetDeleteForEveryone() bool {
	if x != nil {
		return x.DeleteForEveryone
	}
	return false
}

type DeleteMessageResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Result        *common.SuccessResponse `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageResponse) Reset() {
	*x = DeleteMessageResponse{}
	mi := &file_proto_chat_chat_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageResponse) ProtoMessage() {}

func (x *DeleteMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_chat_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageResponse.ProtoReflect.Descriptor instead.
func (*DeleteMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_chat_service_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteMessageResponse) GetResult() *common.SuccessResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_proto_chat_chat_service_proto protoreflect.FileDescriptor

const file_proto_chat_chat_service_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/chat/chat_service.proto\x12\x04chat\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x18proto/common/types.proto\"\xdc\x04\n" +
	"\aMessage\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\v2\f.common.UUIDR\x02id\x125\n" +
	"\x0fconversation_id\x18\x02 \x01(\v2\f.common.UUIDR\x0econversationId\x12)\n" +
	"\tsender_id\x18\x03 \x01(\v2\f.common.UUIDR\bsenderId\x12%\n" +
	"\x04type\x18\x04 \x01(\x0e2\x11.chat.MessageTypeR\x04type\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x127\n" +
	"\bmetadata\x18\x06 \x03(\v2\x1b.chat.Message.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12+\n" +
	"\x06status\x18\t \x01(\x0e2\x13.chat.MessageStatusR\x06status\x12*\n" +
	"\aread_by\x18\n" +
	" \x03(\v2\x11.chat.MessageReadR\x06readBy\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\v \x01(\bR\tisDeleted\x12,\n" +
	"\vreply_to_id\x18\f \x01(\v2\f.common.UUIDR\treplyToId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\vMessageRead\x12%\n" +
	"\auser_id\x18\x01 \x01(\v2\f.common.UUIDR\x06userId\x123\n" +
	"\aread_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x06readAt\"\xb5\x04\n" +
	"\fConversation\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\v2\f.common.UUIDR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12*\n" +
	"\x04type\x18\x03 \x01(\x0e2\x16.chat.ConversationTypeR\x04type\x125\n" +
	"\x0fparticipant_ids\x18\x04 \x03(\v2\f.common.UUIDR\x0eparticipantIds\x12+\n" +
	"\n" +
	"created_by\x18\x05 \x01(\v2\f.common.UUIDR\tcreatedBy\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x120\n" +
	"\flast_message\x18\b \x01(\v2\r.chat.MessageR\vlastMessage\x12!\n" +
	"\funread_count\x18\t \x01(\x05R\vunreadCount\x12\x1b\n" +
	"\tis_active\x18\n" +
	" \x01(\bR\bisActive\x12<\n" +
	"\bmetadata\x18\v \x03(\v2 .chat.Conversation.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa1\x01\n" +
	"\x18GetRecentMessagesRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x128\n" +
	"\x11before_message_id\x18\x03 \x01(\v2\f.common.UUIDR\x0fbeforeMessageId\"\x90\x01\n" +
	"\x19GetRecentMessagesResponse\x12)\n" +
	"\bmessages\x18\x01 \x03(\v2\r.chat.MessageR\bmessages\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore\x12-\n" +
	"\vnext_cursor\x18\x03 \x01(\v2\f.common.UUIDR\n" +
	"nextCursor\"v\n" +
	"\x16GetConversationRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x12%\n" +
	"\auser_id\x18\x02 \x01(\v2\f.common.UUIDR\x06userId\"Q\n" +
	"\x17GetConversationResponse\x126\n" +
	"\fconversation\x18\x01 \x01(\v2\x12.chat.ConversationR\fconversation\"\xb8\x01\n" +
	"\x1bGetUserConversationsRequest\x12%\n" +
	"\auser_id\x18\x01 \x01(\v2\f.common.UUIDR\x06userId\x129\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x19.common.PaginationRequestR\n" +
	"pagination\x127\n" +
	"\vtype_filter\x18\x03 \x01(\x0e2\x16.chat.ConversationTypeR\n" +
	"typeFilter\"\x94\x01\n" +
	"\x1cGetUserConversationsResponse\x128\n" +
	"\rconversations\x18\x01 \x03(\v2\x12.chat.ConversationR\rconversations\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.common.PaginationResponseR\n" +
	"pagination\"\xe6\x02\n" +
	"\x12SendMessageRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x12)\n" +
	"\tsender_id\x18\x02 \x01(\v2\f.common.UUIDR\bsenderId\x12%\n" +
	"\x04type\x18\x03 \x01(\x0e2\x11.chat.MessageTypeR\x04type\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12B\n" +
	"\bmetadata\x18\x05 \x03(\v2&.chat.SendMessageRequest.MetadataEntryR\bmetadata\x12,\n" +
	"\vreply_to_id\x18\x06 \x01(\v2\f.common.UUIDR\treplyToId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"o\n" +
	"\x13SendMessageResponse\x12'\n" +
	"\amessage\x18\x01 \x01(\v2\r.chat.MessageR\amessage\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.common.SuccessResponseR\x06result\"\xa6\x01\n" +
	"\x17MarkMessagesReadRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x12%\n" +
	"\auser_id\x18\x02 \x01(\v2\f.common.UUIDR\x06userId\x12-\n" +
	"\vmessage_ids\x18\x03 \x03(\v2\f.common.UUIDR\n" +
	"messageIds\"n\n" +
	"\x18MarkMessagesReadResponse\x12!\n" +
	"\fmarked_count\x18\x01 \x01(\x05R\vmarkedCount\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.common.SuccessResponseR\x06result\"w\n" +
	"\x15StreamMessagesRequest\x127\n" +
	"\x10conversation_ids\x18\x01 \x03(\v2\f.common.UUIDR\x0fconversationIds\x12%\n" +
	"\auser_id\x18\x02 \x01(\v2\f.common.UUIDR\x06userId\"\xdc\x01\n" +
	"\rMessageUpdate\x121\n" +
	"\vupdate_type\x18\x01 \x01(\x0e2\x10.chat.UpdateTypeR\n" +
	"updateType\x12'\n" +
	"\amessage\x18\x02 \x01(\v2\r.chat.MessageR\amessage\x125\n" +
	"\x0fconversation_id\x18\x03 \x01(\v2\f.common.UUIDR\x0econversationId\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xe1\x01\n" +
	"\x11ChatStreamRequest\x12'\n" +
	"\x04join\x18\x01 \x01(\v2\x11.chat.JoinRequestH\x00R\x04join\x12=\n" +
	"\fsend_message\x18\x02 \x01(\v2\x18.chat.SendMessageRequestH\x00R\vsendMessage\x12-\n" +
	"\x06typing\x18\x03 \x01(\v2\x13.chat.TypingRequestH\x00R\x06typing\x12*\n" +
	"\x05leave\x18\x04 \x01(\v2\x12.chat.LeaveRequestH\x00R\x05leaveB\t\n" +
	"\arequest\"m\n" +
	"\vJoinRequest\x127\n" +
	"\x10conversation_ids\x18\x01 \x03(\v2\f.common.UUIDR\x0fconversationIds\x12%\n" +
	"\auser_id\x18\x02 \x01(\v2\f.common.UUIDR\x06userId\"\x8a\x01\n" +
	"\rTypingRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x12%\n" +
	"\auser_id\x18\x02 \x01(\v2\f.common.UUIDR\x06userId\x12\x1b\n" +
	"\tis_typing\x18\x03 \x01(\bR\bisTyping\"l\n" +
	"\fLeaveRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x12%\n" +
	"\auser_id\x18\x02 \x01(\v2\f.common.UUIDR\x06userId\"\xc6\x01\n" +
	"\x12ChatStreamResponse\x12<\n" +
	"\x0emessage_update\x18\x01 \x01(\v2\x13.chat.MessageUpdateH\x00R\rmessageUpdate\x129\n" +
	"\rtyping_update\x18\x02 \x01(\v2\x12.chat.TypingUpdateH\x00R\ftypingUpdate\x12+\n" +
	"\x05error\x18\x03 \x01(\v2\x13.chat.ErrorResponseH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse\"\xc3\x01\n" +
	"\fTypingUpdate\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x12%\n" +
	"\auser_id\x18\x02 \x01(\v2\f.common.UUIDR\x06userId\x12\x1b\n" +
	"\tis_typing\x18\x03 \x01(\bR\bisTyping\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xb5\x01\n" +
	"\rErrorResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12:\n" +
	"\adetails\x18\x03 \x03(\v2 .chat.ErrorResponse.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf2\x01\n" +
	"\x18GetMessageHistoryRequest\x125\n" +
	"\x0fconversation_id\x18\x01 \x01(\v2\f.common.UUIDR\x0econversationId\x129\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x19.common.PaginationRequestR\n" +
	"pagination\x122\n" +
	"\x06before\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\x120\n" +
	"\x05after\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05after\"\x82\x01\n" +
	"\x19GetMessageHistoryResponse\x12)\n" +
	"\bmessages\x18\x01 \x03(\v2\r.chat.MessageR\bmessages\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.common.PaginationResponseR\n" +
	"pagination\"\x9a\x01\n" +
	"\x14DeleteMessageRequest\x12+\n" +
	"\n" +
	"message_id\x18\x01 \x01(\v2\f.common.UUIDR\tmessageId\x12%\n" +
	"\auser_id\x18\x02 \x01(\v2\f.common.UUIDR\x06userId\x12.\n" +
	"\x13delete_for_everyone\x18\x03 \x01(\bR\x11deleteForEveryone\"H\n" +
	"\x15DeleteMessageResponse\x12/\n" +
	"\x06result\x18\x01 \x01(\v2\x17.common.SuccessResponseR\x06result*\\\n" +
	"\vMessageType\x12\b\n" +
	"\x04TEXT\x10\x00\x12\t\n" +
	"\x05IMAGE\x10\x01\x12\b\n" +
	"\x04FILE\x10\x02\x12\t\n" +
	"\x05AUDIO\x10\x03\x12\t\n" +
	"\x05VIDEO\x10\x04\x12\f\n" +
	"\bLOCATION\x10\x05\x12\n" +
	"\n" +
	"\x06SYSTEM\x10\x06*>\n" +
	"\rMessageStatus\x12\b\n" +
	"\x04SENT\x10\x00\x12\r\n" +
	"\tDELIVERED\x10\x01\x12\b\n" +
	"\x04READ\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03*6\n" +
	"\x10ConversationType\x12\n" +
	"\n" +
	"\x06DIRECT\x10\x00\x12\t\n" +
	"\x05GROUP\x10\x01\x12\v\n" +
	"\aCHANNEL\x10\x02*\x99\x01\n" +
	"\n" +
	"UpdateType\x12\x10\n" +
	"\fMESSAGE_SENT\x10\x00\x12\x15\n" +
	"\x11MESSAGE_DELIVERED\x10\x01\x12\x10\n" +
	"\fMESSAGE_READ\x10\x02\x12\x13\n" +
	"\x0fMESSAGE_DELETED\x10\x03\x12\x13\n" +
	"\x0fMESSAGE_UPDATED\x10\x04\x12\x12\n" +
	"\x0eTYPING_STARTED\x10\x05\x12\x12\n" +
	"\x0eTYPING_STOPPED\x10\x062\x97\x06\n" +
	"\vChatService\x12T\n" +
	"\x11GetRecentMessages\x12\x1e.chat.GetRecentMessagesRequest\x1a\x1f.chat.GetRecentMessagesResponse\x12N\n" +
	"\x0fGetConversation\x12\x1c.chat.GetConversationRequest\x1a\x1d.chat.GetConversationResponse\x12]\n" +
	"\x14GetUserConversations\x12!.chat.GetUserConversationsRequest\x1a\".chat.GetUserConversationsResponse\x12B\n" +
	"\vSendMessage\x12\x18.chat.SendMessageRequest\x1a\x19.chat.SendMessageResponse\x12Q\n" +
	"\x10MarkMessagesRead\x12\x1d.chat.MarkMessagesReadRequest\x1a\x1e.chat.MarkMessagesReadResponse\x12D\n" +
	"\x0eStreamMessages\x12\x1b.chat.StreamMessagesRequest\x1a\x13.chat.MessageUpdate0\x01\x12C\n" +
	"\n" +
	"ChatStream\x12\x17.chat.ChatStreamRequest\x1a\x18.chat.ChatStreamResponse(\x010\x01\x12T\n" +
	"\x11GetMessageHistory\x12\x1e.chat.GetMessageHistoryRequest\x1a\x1f.chat.GetMessageHistoryResponse\x12H\n" +
	"\rDeleteMessage\x12\x1a.chat.DeleteMessageRequest\x1a\x1b.chat.DeleteMessageResponse\x12A\n" +
	"\x06Health\x12\x1a.common.HealthCheckRequest\x1a\x1b.common.HealthCheckResponseB(Z&github.com/link-app/backend/proto/chatb\x06proto3"

var (
	file_proto_chat_chat_service_proto_rawDescOnce sync.Once
	file_proto_chat_chat_service_proto_rawDescData []byte
)

func file_proto_chat_chat_service_proto_rawDescGZIP() []byte {
	file_proto_chat_chat_service_proto_rawDescOnce.Do(func() {
		file_proto_chat_chat_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_chat_chat_service_proto_rawDesc), len(file_proto_chat_chat_service_proto_rawDesc)))
	})
	return file_proto_chat_chat_service_proto_rawDescData
}

var file_proto_chat_chat_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_chat_chat_service_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_proto_chat_chat_service_proto_goTypes = []any{
	(MessageType)(0),                     // 0: chat.MessageType
	(MessageStatus)(0),                   // 1: chat.MessageStatus
	(ConversationType)(0),                // 2: chat.ConversationType
	(UpdateType)(0),                      // 3: chat.UpdateType
	(*Message)(nil),                      // 4: chat.Message
	(*MessageRead)(nil),                  // 5: chat.MessageRead
	(*Conversation)(nil),                 // 6: chat.Conversation
	(*GetRecentMessagesRequest)(nil),     // 7: chat.GetRecentMessagesRequest
	(*GetRecentMessagesResponse)(nil),    // 8: chat.GetRecentMessagesResponse
	(*GetConversationRequest)(nil),       // 9: chat.GetConversationRequest
	(*GetConversationResponse)(nil),      // 10: chat.GetConversationResponse
	(*GetUserConversationsRequest)(nil),  // 11: chat.GetUserConversationsRequest
	(*GetUserConversationsResponse)(nil), // 12: chat.GetUserConversationsResponse
	(*SendMessageRequest)(nil),           // 13: chat.SendMessageRequest
	(*SendMessageResponse)(nil),          // 14: chat.SendMessageResponse
	(*MarkMessagesReadRequest)(nil),      // 15: chat.MarkMessagesReadRequest
	(*MarkMessagesReadResponse)(nil),     // 16: chat.MarkMessagesReadResponse
	(*StreamMessagesRequest)(nil),        // 17: chat.StreamMessagesRequest
	(*MessageUpdate)(nil),                // 18: chat.MessageUpdate
	(*ChatStreamRequest)(nil),            // 19: chat.ChatStreamRequest
	(*JoinRequest)(nil),                  // 20: chat.JoinRequest
	(*TypingRequest)(nil),                // 21: chat.TypingRequest
	(*LeaveRequest)(nil),                 // 22: chat.LeaveRequest
	(*ChatStreamResponse)(nil),           // 23: chat.ChatStreamResponse
	(*TypingUpdate)(nil),                 // 24: chat.TypingUpdate
	(*ErrorResponse)(nil),                // 25: chat.ErrorResponse
	(*GetMessageHistoryRequest)(nil),     // 26: chat.GetMessageHistoryRequest
	(*GetMessageHistoryResponse)(nil),    // 27: chat.GetMessageHistoryResponse
	(*DeleteMessageRequest)(nil),         // 28: chat.DeleteMessageRequest
	(*DeleteMessageResponse)(nil),        // 29: chat.DeleteMessageResponse
	nil,                                  // 30: chat.Message.MetadataEntry
	nil,                                  // 31: chat.Conversation.MetadataEntry
	nil,                                  // 32: chat.SendMessageRequest.MetadataEntry
	nil,                                  // 33: chat.ErrorResponse.DetailsEntry
	(*common.UUID)(nil),                  // 34: common.UUID
	(*timestamppb.Timestamp)(nil),        // 35: google.protobuf.Timestamp
	(*common.PaginationRequest)(nil),     // 36: common.PaginationRequest
	(*common.PaginationResponse)(nil),    // 37: common.PaginationResponse
	(*common.SuccessResponse)(nil),       // 38: common.SuccessResponse
	(*common.HealthCheckRequest)(nil),    // 39: common.HealthCheckRequest
	(*common.HealthCheckResponse)(nil),   // 40: common.HealthCheckResponse
}
var file_proto_chat_chat_service_proto_depIdxs = []int32{
	34, // 0: chat.Message.id:type_name -> common.UUID
	34, // 1: chat.Message.conversation_id:type_name -> common.UUID
	34, // 2: chat.Message.sender_id:type_name -> common.UUID
	0,  // 3: chat.Message.type:type_name -> chat.MessageType
	30, // 4: chat.Message.metadata:type_name -> chat.Message.MetadataEntry
	35, // 5: chat.Message.created_at:type_name -> google.protobuf.Timestamp
	35, // 6: chat.Message.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 7: chat.Message.status:type_name -> chat.MessageStatus
	5,  // 8: chat.Message.read_by:type_name -> chat.MessageRead
	34, // 9: chat.Message.reply_to_id:type_name -> common.UUID
	34, // 10: chat.MessageRead.user_id:type_name -> common.UUID
	35, // 11: chat.MessageRead.read_at:type_name -> google.protobuf.Timestamp
	34, // 12: chat.Conversation.id:type_name -> common.UUID
	2,  // 13: chat.Conversation.type:type_name -> chat.ConversationType
	34, // 14: chat.Conversation.participant_ids:type_name -> common.UUID
	34, // 15: chat.Conversation.created_by:type_name -> common.UUID
	35, // 16: chat.Conversation.created_at:type_name -> google.protobuf.Timestamp
	35, // 17: chat.Conversation.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 18: chat.Conversation.last_message:type_name -> chat.Message
	31, // 19: chat.Conversation.metadata:type_name -> chat.Conversation.MetadataEntry
	34, // 20: chat.GetRecentMessagesRequest.conversation_id:type_name -> common.UUID
	34, // 21: chat.GetRecentMessagesRequest.before_message_id:type_name -> common.UUID
	4,  // 22: chat.GetRecentMessagesResponse.messages:type_name -> chat.Message
	34, // 23: chat.GetRecentMessagesResponse.next_cursor:type_name -> common.UUID
	34, // 24: chat.GetConversationRequest.conversation_id:type_name -> common.UUID
	34, // 25: chat.GetConversationRequest.user_id:type_name -> common.UUID
	6,  // 26: chat.GetConversationResponse.conversation:type_name -> chat.Conversation
	34, // 27: chat.GetUserConversationsRequest.user_id:type_name -> common.UUID
	36, // 28: chat.GetUserConversationsRequest.pagination:type_name -> common.PaginationRequest
	2,  // 29: chat.GetUserConversationsRequest.type_filter:type_name -> chat.ConversationType
	6,  // 30: chat.GetUserConversationsResponse.conversations:type_name -> chat.Conversation
	37, // 31: chat.GetUserConversationsResponse.pagination:type_name -> common.PaginationResponse
	34, // 32: chat.SendMessageRequest.conversation_id:type_name -> common.UUID
	34, // 33: chat.SendMessageRequest.sender_id:type_name -> common.UUID
	0,  // 34: chat.SendMessageRequest.type:type_name -> chat.MessageType
	32, // 35: chat.SendMessageRequest.metadata:type_name -> chat.SendMessageRequest.MetadataEntry
	34, // 36: chat.SendMessageRequest.reply_to_id:type_name -> common.UUID
	4,  // 37: chat.SendMessageResponse.message:type_name -> chat.Message
	38, // 38: chat.SendMessageResponse.result:type_name -> common.SuccessResponse
	34, // 39: chat.MarkMessagesReadRequest.conversation_id:type_name -> common.UUID
	34, // 40: chat.MarkMessagesReadRequest.user_id:type_name -> common.UUID
	34, // 41: chat.MarkMessagesReadRequest.message_ids:type_name -> common.UUID
	38, // 42: chat.MarkMessagesReadResponse.result:type_name -> common.SuccessResponse
	34, // 43: chat.StreamMessagesRequest.conversation_ids:type_name -> common.UUID
	34, // 44: chat.StreamMessagesRequest.user_id:type_name -> common.UUID
	3,  // 45: chat.MessageUpdate.update_type:type_name -> chat.UpdateType
	4,  // 46: chat.MessageUpdate.message:type_name -> chat.Message
	34, // 47: chat.MessageUpdate.conversation_id:type_name -> common.UUID
	35, // 48: chat.MessageUpdate.timestamp:type_name -> google.protobuf.Timestamp
	20, // 49: chat.ChatStreamRequest.join:type_name -> chat.JoinRequest
	13, // 50: chat.ChatStreamRequest.send_message:type_name -> chat.SendMessageRequest
	21, // 51: chat.ChatStreamRequest.typing:type_name -> chat.TypingRequest
	22, // 52: chat.ChatStreamRequest.leave:type_name -> chat.LeaveRequest
	34, // 53: chat.JoinRequest.conversation_ids:type_name -> common.UUID
	34, // 54: chat.JoinRequest.user_id:type_name -> common.UUID
	34, // 55: chat.TypingRequest.conversation_id:type_name -> common.UUID
	34, // 56: chat.TypingRequest.user_id:type_name -> common.UUID
	34, // 57: chat.LeaveRequest.conversation_id:type_name -> common.UUID
	34, // 58: chat.LeaveRequest.user_id:type_name -> common.UUID
	18, // 59: chat.ChatStreamResponse.message_update:type_name -> chat.MessageUpdate
	24, // 60: chat.ChatStreamResponse.typing_update:type_name -> chat.TypingUpdate
	25, // 61: chat.ChatStreamResponse.error:type_name -> chat.ErrorResponse
	34, // 62: chat.TypingUpdate.conversation_id:type_name -> common.UUID
	34, // 63: chat.TypingUpdate.user_id:type_name -> common.UUID
	35, // 64: chat.TypingUpdate.timestamp:type_name -> google.protobuf.Timestamp
	33, // 65: chat.ErrorResponse.details:type_name -> chat.ErrorResponse.DetailsEntry
	34, // 66: chat.GetMessageHistoryRequest.conversation_id:type_name -> common.UUID
	36, // 67: chat.GetMessageHistoryRequest.pagination:type_name -> common.PaginationRequest
	35, // 68: chat.GetMessageHistoryRequest.before:type_name -> google.protobuf.Timestamp
	35, // 69: chat.GetMessageHistoryRequest.after:type_name -> google.protobuf.Timestamp
	4,  // 70: chat.GetMessageHistoryResponse.messages:type_name -> chat.Message
	37, // 71: chat.GetMessageHistoryResponse.pagination:type_name -> common.PaginationResponse
	34, // 72: chat.DeleteMessageRequest.message_id:type_name -> common.UUID
	34, // 73: chat.DeleteMessageRequest.user_id:type_name -> common.UUID
	38, // 74: chat.DeleteMessageResponse.result:type_name -> common.SuccessResponse
	7,  // 75: chat.ChatService.GetRecentMessages:input_type -> chat.GetRecentMessagesRequest
	9,  // 76: chat.ChatService.GetConversation:input_type -> chat.GetConversationRequest
	11, // 77: chat.ChatService.GetUserConversations:input_type -> chat.GetUserConversationsRequest
	13, // 78: chat.ChatService.SendMessage:input_type -> chat.SendMessageRequest
	15, // 79: chat.ChatService.MarkMessagesRead:input_type -> chat.MarkMessagesReadRequest
	17, // 80: chat.ChatService.StreamMessages:input_type -> chat.StreamMessagesRequest
	19, // 81: chat.ChatService.ChatStream:input_type -> chat.ChatStreamRequest
	26, // 82: chat.ChatService.GetMessageHistory:input_type -> chat.GetMessageHistoryRequest
	28, // 83: chat.ChatService.DeleteMessage:input_type -> chat.DeleteMessageRequest
	39, // 84: chat.ChatService.Health:input_type -> common.HealthCheckRequest
	8,  // 85: chat.ChatService.GetRecentMessages:output_type -> chat.GetRecentMessagesResponse
	10, // 86: chat.ChatService.GetConversation:output_type -> chat.GetConversationResponse
	12, // 87: chat.ChatService.GetUserConversations:output_type -> chat.GetUserConversationsResponse
	14, // 88: chat.ChatService.SendMessage:output_type -> chat.SendMessageResponse
	16, // 89: chat.ChatService.MarkMessagesRead:output_type -> chat.MarkMessagesReadResponse
	18, // 90: chat.ChatService.StreamMessages:output_type -> chat.MessageUpdate
	23, // 91: chat.ChatService.ChatStream:output_type -> chat.ChatStreamResponse
	27, // 92: chat.ChatService.GetMessageHistory:output_type -> chat.GetMessageHistoryResponse
	29, // 93: chat.ChatService.DeleteMessage:output_type -> chat.DeleteMessageResponse
	40, // 94: chat.ChatService.Health:output_type -> common.HealthCheckResponse
	85, // [85:95] is the sub-list for method output_type
	75, // [75:85] is the sub-list for method input_type
	75, // [75:75] is the sub-list for extension type_name
	75, // [75:75] is the sub-list for extension extendee
	0,  // [0:75] is the sub-list for field type_name
}

func init() { file_proto_chat_chat_service_proto_init() }
func file_proto_chat_chat_service_proto_init() {
	if File_proto_chat_chat_service_proto != nil {
		return
	}
	file_proto_chat_chat_service_proto_msgTypes[15].OneofWrappers = []any{
		(*ChatStreamRequest_Join)(nil),
		(*ChatStreamRequest_SendMessage)(nil),
		(*ChatStreamRequest_Typing)(nil),
		(*ChatStreamRequest_Leave)(nil),
	}
	file_proto_chat_chat_service_proto_msgTypes[19].OneofWrappers = []any{
		(*ChatStreamResponse_MessageUpdate)(nil),
		(*ChatStreamResponse_TypingUpdate)(nil),
		(*ChatStreamResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_chat_chat_service_proto_rawDesc), len(file_proto_chat_chat_service_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_chat_service_proto_goTypes,
		DependencyIndexes: file_proto_chat_chat_service_proto_depIdxs,
		EnumInfos:         file_proto_chat_chat_service_proto_enumTypes,
		MessageInfos:      file_proto_chat_chat_service_proto_msgTypes,
	}.Build()
	File_proto_chat_chat_service_proto = out.File
	file_proto_chat_chat_service_proto_goTypes = nil
	file_proto_chat_chat_service_proto_depIdxs = nil
}
