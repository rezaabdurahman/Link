version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-linkuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME:-linkdb}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # API Gateway Redis (rate limiting, JWT sessions)
  redis-gateway:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_gateway_data:/data
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

  # User Service Redis (profiles, friends, user sessions)
  redis-user:
    image: redis:6.2
    ports:
      - "6380:6379"
    volumes:
      - redis_user_data:/data
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru

  # Chat Service Redis (messages, real-time data)
  redis-chat:
    image: redis:6.2
    ports:
      - "6381:6379"
    volumes:
      - redis_chat_data:/data
    command: redis-server --maxmemory 1gb --maxmemory-policy allkeys-lru

  # Discovery Service Redis (location data, nearby users)
  redis-discovery:
    image: redis:6.2
    ports:
      - "6382:6379"
    volumes:
      - redis_discovery_data:/data
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - user-svc
      - chat-svc
      - discovery-svc
      - ai-svc
      - search-svc
      - redis-gateway
    environment:
      # Service URLs (for backward compatibility)
      USER_SVC_URL: http://user-svc:8081
      CHAT_SVC_URL: http://chat-svc:8082
      DISCOVERY_SVC_URL: http://discovery-svc:8083
      AI_SVC_URL: http://ai-svc:8084
      SEARCH_SVC_URL: http://search-svc:8085
      
      # Load balancer configuration
      USER_SVC_LB_STRATEGY: round-robin
      USER_SVC_LB_MAX_FAILURES: 5
      USER_SVC_LB_TIMEOUT: 30
      USER_SVC_LB_RECOVERY_TIMEOUT: 60
      
      CHAT_SVC_LB_STRATEGY: round-robin
      CHAT_SVC_LB_MAX_FAILURES: 5
      CHAT_SVC_LB_TIMEOUT: 30
      CHAT_SVC_LB_RECOVERY_TIMEOUT: 60
      
      DISCOVERY_SVC_LB_STRATEGY: round-robin
      AI_SVC_LB_STRATEGY: round-robin
      SEARCH_SVC_LB_STRATEGY: round-robin
      
      # Retry configuration
      USER_SVC_RETRY_MAX: 3
      USER_SVC_RETRY_BASE_DELAY: 100
      USER_SVC_RETRY_MAX_DELAY: 5000
      USER_SVC_RETRY_JITTER: "true"
      
      CHAT_SVC_RETRY_MAX: 3
      AI_SVC_RETRY_MAX: 2
      AI_SVC_RETRY_BASE_DELAY: 200
      
      # Database and Gateway Redis
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: linkuser
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: linkdb
      REDIS_HOST: redis-gateway
      REDIS_PORT: 6379

  user-svc:
    build:
      context: .
      dockerfile: user-svc/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis-user
    environment:
      DB_HOST: postgres
      PORT: 8081
      REDIS_HOST: redis-user
      REDIS_PORT: 6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  chat-svc:
    build:
      context: .
      dockerfile: chat-svc/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - redis-chat
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis-chat
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  discovery-svc:
    build:
      context: .
      dockerfile: discovery-svc/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - redis-discovery
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis-discovery
      REDIS_PORT: 6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  ai-svc:
    build:
      context: .
      dockerfile: ai-svc/Dockerfile
    ports:
      - "8084:8084"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  search-svc:
    build:
      context: .
      dockerfile: search-svc/Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DISCOVERY_SVC_URL: http://discovery-svc:8083
      USER_SVC_URL: http://user-svc:8081
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  redis_gateway_data:
  redis_user_data:
  redis_chat_data:
  redis_discovery_data:

