name: E2E & Visual Tests

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  NODE_VERSION: '18'

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Build application
        working-directory: frontend
        run: npm run build:demo
      
      - name: Start dev server
        working-directory: frontend
        run: npm start &
        
      - name: Wait for dev server
        run: |
          until curl -f http://localhost:5173; do
            echo "Waiting for dev server..."
            sleep 2
          done
        timeout-minutes: 2
      
      - name: Run Cypress E2E tests
        working-directory: frontend
        run: npm run test:e2e
      
      - name: Upload Cypress screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots
      
      - name: Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: frontend/cypress/videos

  visual-regression-tests:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Build application
        working-directory: frontend
        run: npm run build:demo
      
      - name: Start dev server
        working-directory: frontend
        run: npm start &
        
      - name: Wait for dev server
        run: |
          until curl -f http://localhost:5173; do
            echo "Waiting for dev server..."
            sleep 2
          done
        timeout-minutes: 2
      
      - name: Run Percy visual tests
        working-directory: frontend
        run: npm run test:visual:ci
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_BRANCH: ${{ github.head_ref }}
          PERCY_TARGET_BRANCH: ${{ github.base_ref }}

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Build application
        working-directory: frontend
        run: npm run build:demo
      
      - name: Start dev server
        working-directory: frontend
        run: npm start &
        
      - name: Wait for dev server
        run: |
          until curl -f http://localhost:5173; do
            echo "Waiting for dev server..."
            sleep 2
          done
        timeout-minutes: 2
      
      - name: Run accessibility audit
        working-directory: frontend
        run: npm run audit:a11y
      
      - name: Run contrast audit
        working-directory: frontend
        run: npm run audit:contrast
      
      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-audit-results
          path: frontend/contrast-audit-results.json
