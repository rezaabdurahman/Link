#!/bin/bash
# Database Migration Script for ${service_name} service
# Generated by Terraform service-databases module

set -euo pipefail

SERVICE="${service_name}"
NEW_DATABASE="${database_name}"
NEW_USER="${username}"
OLD_DATABASE="${old_database}"
POSTGRES_HOST="${postgres_host}"
POSTGRES_PORT="${postgres_port}"

echo "Migration script for $SERVICE service"
echo "From: $OLD_DATABASE -> $NEW_DATABASE"
echo ""

# Function to run SQL command
run_sql() {
    psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -d "$1" -c "$2" --no-password
}

# Step 1: Create migration timestamp
MIGRATION_DATE=$(date '+%Y%m%d_%H%M%S')
echo "Migration started at: $MIGRATION_DATE"

# Step 2: Export data from old database
echo "Exporting data from $OLD_DATABASE..."
EXPORT_FILE="/tmp/$${SERVICE}_migration_$${MIGRATION_DATE}.sql"
pg_dump -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -d "$OLD_DATABASE" \
    --no-owner --no-privileges --clean --if-exists > "$EXPORT_FILE"

# Step 3: Import data to new database
echo "Importing data to $NEW_DATABASE..."
psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -d "$NEW_DATABASE" \
    -f "$EXPORT_FILE" --no-password

# Step 4: Verify migration
echo "Verifying migration..."
OLD_COUNT=$(psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -d "$OLD_DATABASE" \
    -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema='public';" --no-password | xargs)
NEW_COUNT=$(psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -d "$NEW_DATABASE" \
    -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema='public';" --no-password | xargs)

if [ "$OLD_COUNT" -eq "$NEW_COUNT" ]; then
    echo "Migration successful! Table count matches ($NEW_COUNT tables)"
    echo "Cleaning up temporary file..."
    rm -f "$EXPORT_FILE"
    echo "Migration completed successfully for $SERVICE service"
else
    echo "WARNING: Table count mismatch (Old: $OLD_COUNT, New: $NEW_COUNT)"
    echo "Please verify the migration manually"
    echo "Export file preserved at: $EXPORT_FILE"
    exit 1
fi
